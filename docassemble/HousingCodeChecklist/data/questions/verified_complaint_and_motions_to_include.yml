# DEPENDS ON Repair_Demand_Letter_to_include.yml but doesn't separately include it
---
include:
  - docassemble.AssemblyLine:assembly_line.yml
  - docassemble.ALAffidavitOfIndigency:affidavit_body.yml
---
mandatory: True
comment: |
  Global interview metadata
variable name: interview_metadata["verified_complaint_and_motions"]
data:
  al_weaver_version: "1.6.3"
  generated on: "2022-05-10"
  title: >-
    Verified complaint and motions for temporary restraining order and preliminary injunction
  short title: >-
    Verified complaint and motions for TRO and PI
  description: |-
    You may use this form to ask the court to order the landlord to stop behaving illegally
  original_form: >-
    https://www.masslegalhelp.org/housing/lt1-form-15-tro.pdf
  allowed courts: 
    - "Boston Municipal Court"
    - "District Court"
    - "Housing Court"
    - "Superior Court"
  categories:
    - "HO-00-00-00-00"
  typical role: "plaintiff"
---
objects:
  - verified_complaint_claims: DADict.using(object_type=DAObject, complete_element=["has_claim", "date"], auto_gather=False)
---
#################### Interview order #####################
comment: |
  Controls order and branching logic for questions specific to this form
id: interview_order_verified_complaint_and_motions
code: |
  # Set the allowed courts for this interview
  allowed_courts = interview_metadata["verified_complaint_and_motions"]["allowed courts"]
  nav.set_section('review_verified_complaint_and_motions')
  user_role = 'plaintiff'
  user_ask_role = 'plaintiff'
  File_a_Verified_Complaint_Form
  users.gather()
  other_parties.gather()
  complaint_ask_for_damages
  is_landlord_subject_to_93a
  if is_landlord_subject_to_93a:
    demand_letter_sent
    if complaint_ask_for_damages and not demand_letter_sent:
      confirm_ask_for_damages
      update_ask_for_damages
  verified_complaint_claims.gathered
  tenant_gets_rent_subsidy # from Repair_Demand_letter_to_include.yml
  if complaint_ask_for_damages:
    tenant_unit_rent
  if tenant_gets_rent_subsidy and tenant_subsidy_is_voucher:
    verified_complaint_tenant_voucher_at_risk
  complaint_ask_for_tro
  complaint_ask_for_relocation
  trial_court
  other_parties[0].phone_number
  users[0].email
  users[0].address.address
  users[0].phone_number
  trial_court.address.address
  other_parties[0].address.address
  signature_date
  verified_complaint_wants_fee_waiver
  interview_order_verified_complaint_and_motions = True
---
code: |
  for claim in verified_complaint_claims_terms:
    if verified_complaint_claims[claim].has_claim:
      verified_complaint_claims[claim].date
      verified_complaint_claims[claim].details
  verified_complaint_claims.gathered = True
---
code: |
  affidavitofindigency_attachment.enabled = document_choice['sue_landlord'] and verified_complaint_wants_fee_waiver and is_indigent
---
comment: |
  This question is used to introduce your interview. Please customize
id: Verified_complaint_and_motions_for_temporary_restraining_order_and_preliminary_injunction
continue button field: verified_complaint_and_motions_intro
question: |
  Verified complaint and motions for temporary restraining order and preliminary injunction
subquestion: |
  This form helps you to tell the judge what the landlord has done and to ask the court to order the landlord to stop the illegal activity.
---
depends on:
  - trial_court.department
code: |
  if trial_court.department == "Housing Court":
    verified_complaint_tro_fee = 90
    verified_complaint_entry_of_action_Fee = 135
  elif trial_court.department in ["District Court", "Boston Municipal Court"]:
    verified_complaint_tro_fee = 0
    verified_complaint_entry_of_action_Fee = 195
  else: # Superior Court
    verified_complaint_tro_fee = 90
    verified_complaint_entry_of_action_Fee = 240
---
code: |
  fees['Filing fee'].waive = True
  fees['Filing fee'].amount = verified_complaint_tro_fee + verified_complaint_entry_of_action_Fee
  fees['Service'].waive = True
  if trial_court.department in ["District Court", "Boston Municipal Court"]:
    fees['Service'].amount = 60
  else:
    fees['Service'].amount = 45
  set_fee_waiver_defaults = True
---
id: review fee waiver
continue button field: review_fee_waiver
continue button label: ${word("Resume")}
question: |
  Review your fee wiver
subquestion: |
  * [Edit fees and costs](${url_action("fees['Filing fee'].waive")})
  * [Edit name](${url_action("users[0].name.first")})
  * [Edit public benefits](${url_action("public_assistance_kinds")})
  * [Edit income](${url_action("hh_income.value")})
  * [Edit inability to pay](${url_action("can_afford")})  
---
code: |
  # Case name for Affidavit of Indigency form
  case_name = f"{ users } v. { other_parties }"
---
objects:
  - docket_numbers: DAEmpty
---
id: File a Verified Complaint Form
question: |
  Get help from a judge in court
subquestion: |
  The next set of forms will help you file a complaint against your landlord in court.
  
  A judge can order your landlord to:
  
  1. Fix problems in your apartment
  1. Let you back in to the apartment if they illegally locked you out
  1. Turn back on utility services or start paying for utility services
  1. Pay you money (damages) based on your rights under Massachusetts law

  The court may charge you up to 
  ${ currency(verified_complaint_tro_fee +verified_complaint_entry_of_action_Fee) } to file
  these documents. But most tenants can file at no cost. We will ask you questions to
  find out if you can file for free later on. 
  
continue button field: File_a_Verified_Complaint_Form
---
id: relief sought
question: |
  Getting help right away
subquestion: |
  If you need help right away, a judge can give you an emergency order.
  The emergency order is supposed to last for 10 days.

  Later, the judge can make the order permanent if the landlord does not
  fix the problem right away.
fields:
  - Do you need an emergency order?: complaint_ask_for_tro
    datatype: yesnoradio
  - label: |
      Is there anything you want to say about why you need an emergency order?
      Your complaint will include the facts of the problems you mentioned. So
      you don't need to repeat that here. 

      Include information about special circumstances that make your situation
      urgent. If you don't have special circumstances, it's okay to leave this
      section blank.
    field: verified_complaint_other_emergency_basis
    datatype: area
    rows: 2
    label above field: True
    show if: complaint_ask_for_tro
    required: False
---
id: relocation expenses
question: |
  Getting a new place to stay
subquestion: |
  If the problems are very serious, you may need to move out to allow
  the landlord to fix them.
fields:
  - Do you want the landlord to pay for a hotel or new apartment while they fix the problems?: complaint_ask_for_relocation
    datatype: yesnoradio
    default: True      
---
id: getting money
question: |
  Getting money from your landlord
subquestion: |
  ${ collapse_template(complaint_right_to_get_money_template) }

  ${ collapse_template(complaint_right_to_get_money_should_i) }
fields:
  - Do you want to ask for money in this lawsuit?: complaint_ask_for_damages
    datatype: yesnoradio
---
template: complaint_right_to_get_money_template
subject: |
  What money can I get?
content: |
  You have a right to ask for money from your landlord because of the problems
  that your landlord did not fix.

  In most cases, the money can either be:

  1. A percentage off of your rent for each month you had the problem, or
  1. A flat 3 times your monthly rent for a **serious** problem.

  [Read more](https://www.masslegalhelp.org/housing/problems/deciding-to-go-to-court/civil-lawsuit).
---
template: complaint_right_to_get_money_should_i
subject: |
  Should I ask for money from my landlord?
content: |
  Deciding to sue for money can be complicated.

  You may **not** want to ask for money from your landlord in this lawsuit if:

  1. You think your landlord may file an eviction case against you.
  1. You think you may be able to hire a lawyer later.

  If your landlord files an eviction case against you, you may want to "save" your claim
  for money as part of the eviction case. Your claim may be able to stop the eviction if
  the eviction is for "no fault" or for not paying rent.

  [Read the article about defenses on the MassLegalHelp website](https://www.masslegalhelp.org/housing/lt1-chapter-12-legal-defenses-counterclaims-article).

  But if your landlord evicts you for a "fault" reason (something other than being behind
  in the rent), you cannot use your other claims to stop the eviction. You may be better 
  off asking for money in this lawsuit.

  If you are not sure, you may want to try to [find a lawyer using the Mass Legal Resource Finder](https://masslrf.org/en/triage/start/housing).
---
#id: 93a screening
#question: |
#  Do you have a commercial landlord?
#subquestion: |
#  
#  ${ collapse_template(explain_93a) }
#
#fields:
#  - "select from the following": commercial_landlord_factors
#    datatype: checkboxes
#    choices:
#      - The building has more than 4 units: more_than_4_units
#      - The landlord is an LLC, company or corporation: is_company
#      - The landlord does not live in the building: landlord_lives_elsewhere
#      - The landlord owns multiple buildings: landlord_owns_multiple_buildings
#---
#template: explain_93a
#subject: |
#  Why does this matter?
#content: |  
#  Massachusetts has special protections for tenants when their landlord is a business.
#  The protections might mean that your landlord has to pay for your attorney if they lose. They
#  also can double or triple the amount of money you can win in a lawsuit.
#  
#  These questions help a judge decide if your landlord is a business or someone just renting an 
#  apartment in their home to reduce their own housing cost.
---
code: |
  landlord_subject_to_consumer_protection_law = is_landlord_subject_to_93a
---
sets:
  - other_parties[i].name.first
  - other_parties[i].name.last
  - other_parties[i].name.middle
  - other_parties[i].name.suffix
id: names of opposing parties
question: |
  What is the name of your ${ ordinal(i) } landlord?
fields:
  - code: |
      other_parties[i].name_fields(person_or_business='unsure')
---
variable name: verified_complaint_claims_terms
use objects: True
data:
  illegal lockout: 
    question: My landlord illegally locked me out of the apartment or moved my belongings out, or threatened to do so
    document: locked me out of my home or removed my belongings without lawful authority
    direct: locked you out of your home or removed your belongings
  entered without permission: 
    question: Went into my home without permission
    document: entered my home without permission
    direct: entered your home without permission
  utility shutoff: 
    question: Turned off the gas, electricity or oil service or did not turn it back on
    document: turned off or failed to restore a utility service
    direct: turned off or failed to restore a utility service
  utility no agreement:
    question: Made me pay for utilities without a written agreement
    document: required me to pay for utilities without a written agreement
    direct: required you to pay for utilities without a written agreement
  insufficient notice: 
    question: Made repairs without giving me reasonable warning of the time and day they would come
    document: did not give me reasonable notice to make repairs
    direct: did not give you reasonable notice to make repairs
  other:
    question: other
    document: other
    direct: other
---
id: What did the landlord do
question: |
  Is there anything else that your landlord did?
subquestion: |
  % if include_conditions_in_complaint:
  You have already told us about the housing problems that your landlord did not repair.
  % endif

  Is there anything else you would like to tell the court about?

  Think about problems that have happened in the last 6 years, even if they
  are fixed now.
  
  **My landlord:**
fields:
  - ${ verified_complaint_claims_terms["illegal lockout"]["question"] }: verified_complaint_claims["illegal lockout"].has_claim
    datatype: yesno
    default: |
      ${ kind_of_lawsuit["illegal_lockout"] }
  - ${ verified_complaint_claims_terms["entered without permission"]["question"] }: verified_complaint_claims["entered without permission"].has_claim
    datatype: yesno
    default: |
      ${ kind_of_lawsuit["entered_without_permission"] }
  - ${ verified_complaint_claims_terms["utility shutoff"]["question"] }: verified_complaint_claims["utility shutoff"].has_claim
    datatype: yesno
    default: |
      ${ kind_of_lawsuit["utility_shutoff"] }
  - Utility: complaint_utility_shutoff
    datatype: checkboxes
    choices:
      - Gas: gas
      - Fuel oil: fuel oil
      - Electricity: electricity
    none of the above: False
    minlength: 1
    show if: verified_complaint_claims["utility shutoff"].has_claim
  - ${ verified_complaint_claims_terms["utility no agreement"]["question"]}: verified_complaint_claims["utility no agreement"].has_claim
    datatype: yesno
    help: |
      The landlord must pay for utilities like electricity and gas unless there is a written agreement. A spoken agreement
      is not enough.
    default: |
      ${ kind_of_lawsuit["utilities_no_agreement"] }
  - Utility: complaint_utility_not_paid
    datatype: checkboxes
    choices:
      - Gas: gas
      - Fuel oil: fuel oil
      - Electricity: electricity
    none of the above: False
    minlength: 1
    show if: verified_complaint_claims["utility no agreement"].has_claim
  - ${ verified_complaint_claims_terms["insufficient notice"]["question"] }: verified_complaint_claims["insufficient notice"].has_claim
    datatype: yesno
    default: |
      ${ kind_of_lawsuit["insufficient_notice"] }
  - Did something else that breaks Massachusetts landlord-tenant law: verified_complaint_claims["other"].has_claim
    datatype: yesno
    help: |
      Not sure what to say here? This choice is less common. You can add details on the next page.
    default: |
      ${ kind_of_lawsuit["other_landlord_tenant"] if initial_action_selection == "help_in_court" else False}
  - None of the above: verified_complaint_nota
    datatype: yesno
    uncheck others: True      
---
id: claim i details
question: |
  % if i == "other":
  More information about your landlord's **violation of landlord-tenant law**.
  % else:
  More information about when your landlord **${ verified_complaint_claims_terms[i]["direct"] }**.
  % endif
subquestion: |
  % if i == "other":
  Tell us more about what happened with the **other violation of landlord-tenant law**.
  % elif i == "utility no agreement":
  Tell us a little more about what happened when your landlord required you to pay for
  **${ complaint_utility_not_paid.true_values() }** without a written agreement.
  % elif i == "utility shutoff":
  % if len(complaint_utility_shutoff.true_values()) > 1: 
  Tell us a little more about what happened when your **${ complaint_utility_shutoff.true_values() }**
  were turned off. 
  % else:
  Tell us a little more about what happened when your **${ complaint_utility_shutoff.true_values() }**
  was turned off. 
  % endif
  % else:
  Tell us a little more about what happened when your landlord **${ verified_complaint_claims_terms[i]["direct"] }.**
  % endif
  
  The information you share on this screen will appear on your 
  final documents for the judge. You can edit and explain more
  details later.
fields:  
  - label above field: True
    label: |
      % if i == "other":
      Complete the sentence:
      **"My landlord also violated the law when they"**
      % else:
      Complete the sentence
      **"My landlord ${ verified_complaint_claims_terms[i]["document"] }. Specifically, "**
      % endif
    field: verified_complaint_claims[i].details
    datatype: area
    rows: 2
  - When did this happen? State an exact date or the best date you can remember, such as "Summer 2021". **Include a year.**: verified_complaint_claims[i].date
    label above field: True
    validate: |
      lambda y: re.search(r"\d\d\d\d", y) or validation_error(f"Include a year with your answer, like \"{today().year}\"")
---
# similar question in Repair_Demand_Letter
# id: Do you receive a subsidy for rent?
# question: |
#   Do you receive a subsidy for rent?
# yesno: rent_subsidy
# ---
# id: What is your monthly rent
# question: |
#   % if rent_subsidy == True:
#   What is the market rent?
#   % else:
#   What is your monthly rent?
#   % endif
# fields:
#   - "rent amount": rent_amount
#     datatype: currency
#     min: 0
---
id: is tenant voucher at risk?
question: |
  Is your housing subsidy at risk?
subquestion: |
  If you have a mobile voucher, like a Section 8, your housing authority
  might put you on a "clock" to move to a new apartment when your landlord
  refuses to fix serious housing problems.
fields:
  - Do you have a mobile voucher (Section 8 or MRVP)?: tenant_subsidy_is_voucher
    datatype: yesnoradio
  - Are you at risk of being forced to move by your housing authority?: verified_complaint_tenant_voucher_at_risk
    datatype: yesnomaybe
    show if: tenant_subsidy_is_voucher
---
id: Did you send the landlord a demand letter?
question: |
  Did you send the landlord a demand letter?
subquestion: |
  This is sometimes called a 93A demand letter, a 30 day demand letter, or a request for settlement.
fields: 
  - I sent my landlord a demand letter: demand_letter_sent
    datatype: yesnoradio
  - When did you send it?: date_of_93A_notice
    datatype: date
    show if: demand_letter_sent
  - Did you get a reasonable settlement offer within 30 days?: got_93a_settlement_offer
    datatype: yesnoradio
    show if: demand_letter_sent
    help: |
      Answer "no" if you did not get an offer, or if you believe that the offer was not a reasonable
      offer to settle your demand.
---
id: confirm ask for damages
question: |
  You said you did not send a demand letter yet
subquestion: |
  Most tenants send their landlord a demand letter
  before they sue their landlord for money.

  Sending your landlord a demand letter means:

  - Your landlord may need to pay for your attorney if you win
  - You may get up to 3 times the total amount of money
fields:
  - What do you want to do?: confirm_ask_for_damages
    datatype: radio
    choices:
      - Ask only for emergency repairs now. I will sue my landlord for money later, after I send a demand letter: postpone_damages
      - Ask for both repairs and money now. I understand I may get less total money.: keep_on_suing
  - note: |
      **Okay**. After you finish this complaint, we will help you complete a
      demand letter. We can also remind you to come back and ask for money in
      about 30 days.
    show if:
      variable: confirm_ask_for_damages
      is: postpone_damages
  - note: |
      **Okay**. Your complaint will include a demand that your landlord must respond to within 30 days. We can remind you to come back and amend your complaint after 30 days.
    show if:
      variable: confirm_ask_for_damages
      is: keep_on_suing
---
################## Fee waiver integration ##################
---
id: wants fee waiver
question: |
  Filing for free
subquestion: |
  The court may charge you a fee to file these forms.

  The cost can include:

  - ${ currency(verified_complaint_tro_fee) } to get an emergency order, and
  - ${ currency(verified_complaint_entry_of_action_Fee) } to file the case in court.

  But most tenants do not pay anything. You can file for free if:

  1. You get certain benefits, like Mass Health, or
  1. You earn less than 125% of the Federal Poverty Level for Massachusetts, or
  1. You cannot afford to pay the fee.

fields:
  - Would you like to find out if you qualify to file for free?: verified_complaint_wants_fee_waiver
    datatype: yesnoradio
---
only sets:
  - update_ask_for_damages
code: |
  if confirm_ask_for_damages == "postpone_damages":
    complaint_ask_for_damages = False
  update_ask_for_damages = True      
---
code: |
  addresses_to_search = [user.address for user in users]
---
id: verified complaint and motions review screen
event: review_verified_complaint_and_motions
question: |-
  Review your answers
review:
  - Edit: users.revisit
    button: |-
      **Tenant**
      
      % for item in users:
      - ${ item }
      % endfor
  - Edit: other_parties.revisit
    button: |-
      **Landlord(s)**
      
      % for item in other_parties:
      - ${ item }
      % endfor
  - Edit: trial_court
    button: |-
      **Trial court**
      
      % if defined("trial_court.name"):
      Name: ${ trial_court.name }
      
      % endif
      % if defined("trial_court.address.county"):
      Address: ${ trial_court.address.block() }
      % endif
  - Edit: rent_amount
    button: |-
      **Monthly rent**
      
      ${ currency(rent_amount) }
  - Edit: date_of_93A_notice
    button: |-
      **When did you first send the landlord a demand letter?**
      
      ${ date_of_93A_notice }
  - Edit: |-
      verified_complaint_claims.revisit
    button: |-
      **Verified Complaint Claims**

      % for item in verified_complaint_claims:
      - ${ item }
      % endfor
  - Edit: |-
      docket_numbers.revisit
    button: |-
      **Docket Numbers**

      % for item in docket_numbers:
      - ${ item }
      % endfor
  - Edit: |-
      verified_complaint_and_motions_post_interview_instructions.revisit
    button: |-
      **Verified Complaint And Motions Post Interview Instructions**

      % for item in verified_complaint_and_motions_post_interview_instructions:
      - ${ item }
      % endfor
  - Edit: |-
      verified_complaint_and_motions_attachment.revisit
    button: |-
      **Verified Complaint And Motions Attachment**

      % for item in verified_complaint_and_motions_attachment:
      - ${ item }
      % endfor
  - Edit: |-
      complaint_ask_for_tro
    button: |
      **Getting help right away**
      
      Do you need an emergency order?: ${ word(yesno(complaint_ask_for_tro)) }
  - Edit: |-
      complaint_ask_for_relocation
    button: |
      **Getting a new place to stay**

      Do you want the landlord to pay for a hotel or new apartment while the repairs are made?: ${ word(yesno(complaint_ask_for_relocation)) }
  - Edit: |-
      complaint_ask_for_damages
    button: |
      **Getting money from your landlord**

      Do you want to ask for money in this lawsuit?: ${ word(yesno(complaint_ask_for_damages)) }
  - Edit: |-
      verified_complaint_claims["entered without permission"].has_claim
    button: |
      **Is there anything else that your landlord did?**

      ${ verified_complaint_claims_terms["entered without permission"]["question"] }: ${ word(yesno(verified_complaint_claims["entered without permission"].has_claim)) }

      ${ verified_complaint_claims_terms["illegal lockout"]["question"] }: ${ word(yesno(verified_complaint_claims["illegal lockout"].has_claim)) }

      ${ verified_complaint_claims_terms["utility no agreement"]["question"]}: ${ word(yesno(verified_complaint_claims["utility no agreement"].has_claim)) }

      Utility: ${ showifdef('complaint_utility_not_paid') }

      ${ verified_complaint_claims_terms["utility shutoff"]["question"] }: ${ word(yesno(verified_complaint_claims["utility shutoff"].has_claim)) }

      Utility: ${ showifdef('complaint_utility_shutoff') }

      ${ verified_complaint_claims_terms["insufficient notice"]["question"] }: ${ word(yesno(verified_complaint_claims["insufficient notice"].has_claim)) }

      Did something else that breaks Massachusetts landlord-tenant law: ${ word(yesno(verified_complaint_claims["other"].has_claim)) }

      None of the above: ${ word(yesno(verified_complaint_nota)) }
  - Edit: |-
      tenant_subsidy_is_voucher
    button: |
      **Is your housing subsidy at risk?**

      Do you have a mobile voucher (Section 8 or MRVP)?: ${ word(yesno(tenant_subsidy_is_voucher)) }

      Are you at risk of being forced to move by your housing authority?: ${ showifdef('verified_complaint_tenant_voucher_at_risk') }
  - Edit: |-
      demand_letter_sent
    button: |
      **Did you send the landlord a demand letter?**

      I sent my landlord a demand letter: ${ word(yesno(demand_letter_sent)) }

      When did you send it?: ${ showifdef('date_of_93A_notice') }

      Did you get a reasonable settlement offer within 30 days?: ${ word(yesno(got_93a_settlement_offer)) }
  - Edit: |-
      confirm_ask_for_damages
    button: |
      **You said you did not send a demand letter yet**

      What do you want to do?: ${ showifdef('confirm_ask_for_damages') }
  - Edit: |-
      verified_complaint_wants_fee_waiver
    button: |
      **Filing for free**

      Would you like to find out if you qualify to file for free?: ${ word(yesno(verified_complaint_wants_fee_waiver)) }
---
continue button field: other_parties.revisit
question: |
  Edit landlords
subquestion: |
  ${ other_parties.table }
  ${ other_parties.add_action() }
---
table: other_parties.table
rows: other_parties
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
  - Phone number: |
      row_item.phone_number if defined("row_item.phone_number") else ""
  - Address: |
      row_item.address.block() if defined("row_item.address.address") else ""
edit:
  - name.first
  - phone_number
  - address.address
confirm: True
---
continue button field: users.revisit
question: |
  Edit tenant information
subquestion: |
  ${ users.table }
  ${ users.add_action() }
---
table: users.table
rows: users
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
  - Email: |
      row_item.email if defined("row_item.email") else ""
  - Address: |
      row_item.address.block() if defined("row_item.address.address") else ""
  - Phone number: |
      row_item.phone_number if defined("row_item.phone_number") else ""
edit:
  - name.first
  - email
  - address.address
  - phone_number
confirm: True
---
event: |-
  verified_complaint_claims.revisit
id: |-
  revisit verified_complaint_claims
question: |-
  Edit your answers about Verified Complaint Claims
subquestion: |-
  ${ verified_complaint_claims.table }
---
event: |-
  docket_numbers.revisit
id: |-
  revisit docket_numbers
question: |-
  Edit your answers about Docket Numbers
subquestion: |-
  ${ docket_numbers.table }
---
event: |-
  verified_complaint_and_motions_post_interview_instructions.revisit
id: |-
  revisit verified_complaint_and_motions_post_interview_instructions
question: |-
  Edit your answers about Verified Complaint And Motions Post Interview Instructions
subquestion: |-
  ${ verified_complaint_and_motions_post_interview_instructions.table }
---
event: |-
  verified_complaint_and_motions_attachment.revisit
id: |-
  revisit verified_complaint_and_motions_attachment
question: |-
  Edit your answers about Verified Complaint And Motions Attachment
subquestion: |-
  ${ verified_complaint_and_motions_attachment.table }
---
columns:
  - 'When did this happen? State an exact date or the best date you can remember, such as "last summer". Include a year.': |-
      row_item.date if hasattr(row_item, 'date') else ''
rows: |-
  verified_complaint_claims
table: |-
  verified_complaint_claims.table
---
code: |
  if complaint_ask_for_tro and include_conditions_in_complaint:
    verified_complaint_and_motions_attachment.title = "Tenant complaint for emergency repairs"
  else:
    verified_complaint_and_motions_attachment.title = "Tenant complaint for repairs"
---
objects:
  - verified_complaint_and_motions_post_interview_instructions: ALDocument.using(title="Instructions for your court documents", filename="next_steps_complaint.docx", has_addendum=False)
  - verified_complaint_and_motions_attachment: ALDocument.using(filename="verified_complaint_and_motions.docx", has_addendum=False)
---
attachments:
  - name: verified complaint and motions post interview instructions
    filename: Post-interview-instructions     
    variable name: verified_complaint_and_motions_post_interview_instructions[i]        
    skip undefined: True
    docx template file: next_steps_complaint.docx
---
attachments:    
  - name: verified complaint and motions attachment
    filename: verified_complaint_and_motions.docx     
    variable name: verified_complaint_and_motions_attachment[i]        
    skip undefined: True
    docx template file: verified_complaint_and_motions.docx
---
code: |
  # This gets overridden inside UpToCode interview
  tenant_repair_default_date = next(item.date for item in sorted(verified_complaint_claims.items(), key=lambda y: y.date) if item.has_claim)