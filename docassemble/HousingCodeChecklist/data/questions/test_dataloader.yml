---
include:
  - docassemble.AssemblyLine:al_package.yml
  - docassemble.MAHousingTRO:housing_tro_to_include.yml   
  - docassemble.SanitaryCode:sanitary_code_template.yml
  - docassemble.RentalRepairLetter:Repair_Letter_Tenant.yml
  #- docassemble.RentWitholdingLetter:tenant_rent_withholding_letter.yml
  - customized_screens.yml 
---
comment: |
  Section labels for child interviews that have follow-up
  questions
variable name: sub_documents
data:
  get_report:
    section_link: b
    section_label: b
  tell_landlord: 
    section_link: b
    section_label:     b
  get_inspection: 
    section_link: b
    section_label:     b
  organize_tenants:
    section_link: b
    section_label: b
  share_with_tenants:
    section_link: b
    section_label:     b
  enforce_inspection: 
    section_link: b
    section_label: b
  fix_problems:
    section_link: b
    section_label: b
  get_injunction:
    section_link: b
    section_label: b
  sue_landlord:
    section_link: b
    section_label: b
---
sections:
  - section_getting_started: Getting started
  - review_conditions: List problems
  - document_choice: Choose a solution
  - provide_details: Answer questions
  - download_conditions_checklist_docs: Download
---
metadata:
  title: |-
    MADE: UpToCode
  authors:
    - Quinten Steenhuis
    - Michael Cronin
    - Joelle Ataya
    - Cherise Barandao
    - Christopher Selak    
    - Michael Carroll
  logo: |
    <i class="fas fa-house-damage"></i><div class="title"> MADE: UpToCode</div>
comment: |
  Some of the documents that this interview assembles
  use work done as part of the Assembly Line project.
---
modules:
  - .load_data
  - docassemble.ALToolbox.misc  
---
mandatory: True
id: interview order
code: |
  intro
  users[0].name.first
  starting_task
  bad_conditions.gather()
  if bad_conditions.count_conditions() > 0:
    # This is a bit of a workaround
    for room in bad_conditions:
      for condition in bad_conditions[room].claims.true_values():
        bad_conditions[room].details[condition].condition_existed_at_start  
    nav.set_section('review_conditions')        
    review_conditions
  else:
    warn_add_conditions
  nav.set_section('document_choice')
  screen_ll_knows_problem
  nav.set_section('provide_details')
  if not screen_ll_knows_problem:
    users[0].address.address
    users[0].address.geocode()
    organizing_interstitial
  else:
    explain_documents
  if screen_ll_knows_problem and document_choice['share_with_tenants']:
    explain_sharing
    store_for_tenant_sharing
  if screen_ll_knows_problem and document_choice['organize_tenants']:
    users[0].address.address
    users[0].address.geocode()
    organizing_interstitial
  if screen_ll_knows_problem and document_choice['get_inspection']:
    interview_order_request_housing_inspection
  if screen_ll_knows_problem and screen_contacted_housing_inspector and document_choice.get('enforce_inspection'):
    sanitary_code_template
  if screen_ll_knows_problem and document_choice['get_injunction']:
    interview_order_Housing_Temporary_Restraining_Order0002
  nav.set_section('download_conditions_checklist_docs')
  download_conditions_checklist_docs
---
code: |
  store_variables_snapshot(
    {'landlord': other_parties.name.full, 
     'address_street': users[0].address.address,
     'address_city': users[0].address.city,
     'address_zip': users[0].address.zip,
     'bad_conditions': bad_conditions}
     )
  store_for_tenant_sharing = True
---
id: launch made
continue button field: launch_made
question: |
  Stop your eviction
subquestion: |
  Click the link below to start using MADE, Massachusetts Defense
  for Eviction in a new window. It will take about 20-45 minutes to finish.
  When you are done, you can come back here.
  
  ${ action_button_html('https://interviews.gbls.org/start/eviction', label='Launch MADE') } 
---
features:
  css:
    - docassemble.ALToolbox:collapse_template.css
  javascript:
    - back_button.js
---
objects:
  - dataloader: DataLoader.using(filename="housing_code_checklist.xlsx")
  - bad_conditions: ConditionsDict.using(there_are_any=True)
---
depends on:
  - bad_conditions[i].claims
code: |
  bad_conditions[i].claims
  bad_conditions[i].df
  for condition in bad_conditions[i].claims.true_values():
    bad_conditions[i].details[condition].condition_existed_at_start
  bad_conditions[i].complete = True
---
code: |  
  bad_conditions[i].details[j].condition_existed_at_start
  bad_conditions[i].details[j].complete = True
---
#features:
#  question back button: False
---
id: intro
question: |
  You have the right to a safe and decent home
subquestion: |  
  A bad housing condition is something in your home that needs to be fixed,
  like a leaky faucet or not having heat in the winter. Some are little and
  some are big. But everyone has a right to a safe home--**without** any
  bad housing conditions.
  
  #### Who is this website for?
  
  You can use this website if you are a tenant, a helper for a tenant, or
  an attorney or community organizer. If you are under 18 and helping a parent
  or friend, the parent or friend who is over 18 needs to sign and file any
  paperwork that you send to a court.
  
  #### Your right not to be retaliated against
  
  It is illegal for a landlord to punish you by trying to evict you, raising 
  your rent, or making a major change in your rental agreement because you:
  
  1. Ask for needed repairs,
  1. Report bad conditions in your apartment or building to the Board of Health
  or other local officials,
  1. Join a tenantsâ€™ organization, or
  1. Withhold rent because of bad conditions. 
  
  [Read more](https://www.masslegalhelp.org/when-is-eviction-illegal).
    
  #### :hand-paper: If you are being evicted
  
  You can use another free tool, [MADE](https://interviews.gbls.org/start/eviction),
  to fight your eviction in court. It will take about 20-45 minutes. 
  
  ${ action_button_html(url_ask('launch_made'), label="I am being evicted") }

continue button field: intro
---
id: intro affirmation
question: |
  ${ users.familiar() }, you can do this!
subquestion: |  
  This tool will help you solve problems with bad conditions in your home.
  
  1. Read about your landlord's responsibilities.
  1. Track the problems you have in your home.
  1. Upload photos or add other information about each problem.
  1. Choose a next step to get your landlord to fix the problems.

  You can:
  
  * Let your landlord know about the problem.
  * Call a housing inspector.
  * Ask a judge to order your landlord to fix the problems.
  * Sue your landlord in court for money.  
    
  ${ action_button_html(url_action('learn_more'), label="Read more first") }
  
continue button field: starting_task  
continue button label: Get started
---
id: track conditions intro
question: |
  Track your housing problems
subquestion: |
  This website will help you track.
continue button field: track_conditions_intro  
---
id: learn more
question: |
  Solve your housing problems
subquestion: | 
  ${ collapse_template(how_to_defend_eviction_template) }
  ${ collapse_template(how_to_document_template) }
  ${ collapse_template(how_to_notify_landlord_template) }
  ${ collapse_template(get_inspection_template) }
  ${ collapse_template(get_injunction_template) }
  ${ collapse_template(sue_your_landlord_template) } 
continue button field: learn_more
---
template: how_to_document_template
subject: |
  Document the problem
content: |
  Keeping good records is important. Before you can get a problem fixed,
  you need to be able to tell your landlord and the court where the problem
  is.
  
  Use the tools that you have to take your records. You can use this website
  to record problems and upload pictures.
  
  You could also:
  
  * Use your phone or a camera to take pictures of the problems.
  * Use a thermometer or a photo of your thermostat and write down the
    time and date of each recording.
  
  The best records come from a housing inspector. See the information below
  about calling an inspector.
---
template: how_to_notify_landlord_template
subject: |
  Notify your landlord
content: |
  Your landlord is only responsible to fix problems that they know about.
  Make sure your landlord knows about problems in your house by telling them,
  even if you think that they should already know.
  
  Use a way to tell your landlord that you can track and prove.
  
  * Write your landlord a text message.
  * Write a letter on paper, and keep a copy for yourself. Make sure the date
    is on the letter.
  * Write an email.
  
  You can use this website to tell your landlord about the problems in your
  home.
---
template: get_inspection_template
subject: |
  Call a housing inspector
content: |
  A housing inspector is someone who works for the city or the housing 
  authority.
  
  If you live in public housing or have a Section 8 voucher, the Housing
  Authority will inspect your home at least once a year. But you can call if 
  you need them to come sooner.
  
  All tenants, including tenants who live in public housing, can call a city
  inspector. The city inspector should come within 1 day to inspect emergency
  problems.
  
  In Boston, Cambridge, Chelsea, and Worcester you can call the Inspectional
  Services Division.
  
  In other cities and towns, call the Board of Health.
  
  Before calling the inspector, use this website to create and print a list of 
  the problems that you have identified. This will help make sure that the
  inspector does not miss any problems.

  [Learn more](https://www.masslegalhelp.org/housing/lt1-chapter-8-getting-inspection).
---
template: get_injunction_template
subject: |
  Get emergency help from a judge
content: |
  You can get emergency help from a judge in two different ways:
  
  1. Ask a judge to enforce an order from a housing inspector.
  1. Get a temporary restraining order.
  
  [Learn more](https://www.masslegalhelp.org/housing/lt1-chapter-8-landlord-refusing-repairs).
---
template: how_to_defend_eviction_template
subject: |
  Stop your eviction
content: |
  Sometimes a landlord will file an eviction case against a tenant if they
  complain about problems in their house.
  
  This is illegal. In Massachusetts, evicting a tenant because they complained
  about bad housing conditions or other housing problems is called
  "retaliation". [Law about retaliation](https://www.masslegalhelp.org/housing/lt1-chapter-12-illegal-eviction).
  
  Even if your landlord is not evicting you **because** you complained about
  problems in your house, the problems may be a defense to your eviction.
  [239 &sect; 
  8A](https://malegislature.gov/Laws/GeneralLaws/PartIII/TitleIII/Chapter239/Section8A) 
  makes bad housing conditions a defense to an eviction if:
  
  1. The eviction is for nonpayment of rent or for no reason.
  1. The problems threaten the health and safety of someone who lives in the
    apartment.
  1. The landlord knew about the problems at a time that the tenant did not
  owe any rent.
  1. The problems were not caused by the tenant.
  1. The problems can be fixed without the tenant moving out permanently.
  
  You can defend against your eviction with MADE, Massachusetts Defense
  Against Eviction.
  
  ${ action_button_html('https://interviews.gbls.org/start/eviction', label='Launch MADE') }
---
template: sue_your_landlord_template
subject: |
  Sue your landlord for money
content: |
  You have a right to sue your landlord for money if you have problems in
  your home that your landlord is responsible to fix.
  
  You may be able to sue as part of an existing eviction case. Or you can
  file your own case against your landlord.
  
  It is a good idea to [talk to a lawyer](https://masslrf.org/en/triage/start/housing). You may be able to get a lawyer who will help you for free.
  
  You can sue for:
  
  * Breach of Quiet Enjoyment, which may entitle you to up to 3 months of rent,
    at the market rent for your apartment.
  * Breach of the Warranty of Habitability, which may entitle you to a
    percentage of your rent for every month that the problem existed.
    
  [Learn more about suing your landlord](https://www.masslegalhelp.org/housing/lt1-pullout-13-taking-landlord-to-court).
---  
id: room chooser
question: |
  Your landlord's responsibilities
subquestion: |
  % if len(bad_conditions):
  You have already listed problems in these rooms:
  
  % for button in bad_conditions:
  * [:pencil-alt: ${ button }](${ url_action('bad_conditions["' + button + '"].claims') } )
  % endfor
  % else:
  Your home is protected by the [state sanitary 
  code](https://www.mass.gov/doc/105-cmr-410-state-sanitary-code-chapter-ii-minimum-standards-of-fitness-for-human-habitation/download). 
  Click the buttons below to learn what a safe home means in different categories.
  % endif
field: bad_conditions.new_item_name
buttons:
  code: |
    [button for button in available_buttons if next(iter(button)) not in bad_conditions ]
back button label: |
  Back
post: |
  % if len(bad_conditions.elements):
  ${ action_button_html(url_ask('set_gathered'), label="Skip and continue", color="primary", size="md") }
  % endif
---
code: |
  bad_conditions.gathered = True
  set_gathered = True
---
variable name: available_buttons
data:
  - emergency: Emergency
    image: first-aid
  - Heat: Heating
    image: thermometer-full
  - Bathroom: Bathroom
    image: bath
  - Lighting: Lighting
    image: lightbulb
  - Electricity and Gas: Electricity and Gas
    image: plug
  - Garbage: Garbage
    image: trash-alt
  - General Maintenance: General maintenance
    image: tools
  - Structural Maintenance: Structural maintenance    
    image: hard-hat
  - Kitchen: Kitchen
    image: utensils
  - Lead paint: Lead Paint
    image: paint-roller
  - Rodents and insects: Rodents and insects
    image: bug
  - Safety: Safety
    image: door-open
  - Space: Space
    image: house-user
  - Structural Elements: Structural elements
    image: hammer
  - Ventilation and Light: Ventilation and light
    image: sun
  - Water: Water
    image: faucet
question back button: False
---
if: |
  i == 'emergency'
undefine:
  - bad_conditions[i].df  
  - bad_conditions[i].complete
id: Claims
question: |
  Emergency problems
subquestion: |
  Your landlord should start fixing any problem listed below within 24 hours
  of learning about the problem.
  
  If you do not see your problem listed below, try a different category.
fields:
  - no label: bad_conditions[i].claims
    datatype: checkboxes
    code: |
      conditions_with_help(dataloader, "24 hours", search_column="Deadline")
    default:
      code: |
        bad_conditions[i].claims.true_values() if defined('bad_conditions[i].claims') else []
help: 
  label: |
    Sanitary Code
  content: |
    The problems listed above are cited in the following sections of the
    [sanitary code](https://www.mass.gov/doc/105-cmr-410-state-sanitary-code-chapter-ii-minimum-standards-of-fitness-for-human-habitation/download):
        
    Problem | Sanitary Code
    --------|------------------
    % for row in dataloader.get_rows(allowed_types=["24 hours"], filter_column="Deadline").iterrows():
    ${ row[1]['Interview description'] } | ${ row[1]['Sanitary Code Section'] }
    % endfor
---
if:
  i != 'emergency'
undefine:
  - bad_conditions[i].df
  - bad_conditions[i].complete  
id: Non-emergency claims
question: |
  Problems with ${ i }
fields:
  - no label: bad_conditions[i].claims
    datatype: checkboxes
    code: |
      conditions_with_help(dataloader, i)
    default:
      code: |
        bad_conditions[i].claims.true_values() if defined('bad_conditions[i].claims') else []
help: 
  label: |
    Sanitary Code
  content: |
    The problems listed above are cited in the following sections of the
    [sanitary code](https://www.mass.gov/doc/105-cmr-410-state-sanitary-code-chapter-ii-minimum-standards-of-fitness-for-human-habitation/download):
        
    Problem | Sanitary Code
    --------|------------------
    % for row in dataloader.get_rows(allowed_types=[i], filter_column="Category").iterrows():
    ${ row[1]['Interview description'] } | ${ row[1]['Sanitary Code Section'] }
    % endfor        
---
id: there is another condition
question: |
  Do you want to list problems in another category?
subquestion: |
  So far you have told us about problems in "${ comma_and_list(bad_conditions.keys()) }"
  
  Tap "yes" if you want to list problems in another category.
yesno: bad_conditions.there_is_another
---
depends on:
  - bad_conditions[i].claims
code: |
  bad_conditions[i].df = dataloader.load_rows(bad_conditions[i].claims.true_values())
---
continue button field: review_conditions
id: review conditions
question: |
  Here is what you told us so far
subquestion: |  
  % for category in bad_conditions:
  #### [${ category.title() }](${ url_action('bad_conditions["' + category + '"].claims') })
  
  % for index, row in bad_conditions[category].df.iterrows():
  * ${ row['Interview description'] }
  % endfor
  % endfor
  
  ${ bad_conditions.add_action() }
---
event: warn_add_conditions
question: |
  You haven't added any problems yet
subquestion: |
  You should add at least one problem to continue.
  
  ${ bad_conditions.add_action() }
---
id: triage
question: |
  Deciding on your next steps
fields:
  - Does your landlord already know about at least one of the problems in your home?: screen_ll_knows_problem
    datatype: yesnoradio
  - note: |
      **Okay.** Your first step should be to tell your landlord about the
      problem. We can help you write a letter to tell your landlord and put
      them on legal notice.
    show if:
      variable: screen_ll_knows_problem
      is: False
  - Is your landlord refusing to fix the problems?: screen_ll_refusing_to_fix
    datatype: yesnoradio
    show if: screen_ll_knows_problem
  - note: |
      **You may want to give your landlord time.** Some serious problems
      need to be fixed in 24 hours, and others in 5 days. Other problems
      can be fixed in up to 30 days.
      
      If you have not given your landlord enough time to fix the problem yet,
      you may want to wait before you get help from a court. But it is up
      to you.
    show if:
      variable: screen_ll_refusing_to_fix
      is: False
  - Are other tenants in your building also having housing problems?: screen_other_tenants_with_problem
    datatype: yesnoradio
    show if: screen_ll_knows_problem
  - note: |
      **${ users.familiar() }, you and your neighbors are stronger together**. You have the right to **organize**
      with other tenants to fight the bad housing conditions.
    show if: screen_other_tenants_with_problem
  - Have you requested an inspection from the city about the most recent problem?: screen_contacted_housing_inspector       
    datatype: yesnoradio
    show if: screen_ll_knows_problem
  - note: |
      **You may want to get an inspection.** You are not required to get a
      housing inspection. But it can help a judge understand the problems
      better. You do not need to wait for the inspection to get more help.
    show if:
      variable: screen_contacted_housing_inspector
      is: False
  - note: |
      **What would you like to do?**    
      Remember, you have the right not to be {retaliated} against.
    show if: screen_ll_knows_problem      
  - no label: document_choice
    required: False
    datatype: checkboxes
    js show if: |
      val("screen_ll_knows_problem") && val("screen_contacted_housing_inspector")
    choices:
      - Save or print a copy of my checklist for later: get_report
      - Tell my landlord about the problems: tell_landlord
      - Organize with my neighbors or other tenants in my city: organize_tenants
      - Let other tenants know about my bad landlord: share_with_tenants
        help: |
          This will share your address and landlord's name, but not your name
          or apartment number.
      - Get a city inspection: get_inspection
      # - Withhold rent: withhold_rent
      - Fix the problems myself and deduct money from my rent: fix_problems
      - Ask a judge to enforce an order from a housing inspector: enforce_inspection
      - Ask a judge to order my landlord to fix the problem: get_injunction
      - Sue my landlord for money: sue_landlord
    default:
      - get_report
  - no label: document_choice
    required: False
    datatype: checkboxes
    js show if: |
      val("screen_ll_knows_problem") && !val("screen_contacted_housing_inspector")
    choices:
      - Save or print a copy of my checklist for later: get_report
      - Tell my landlord about the problems: tell_landlord
      - Organize with my neighbors or other tenants in my city: organize_tenants
      - Let other tenants know about my bad landlord: share_with_tenants
        help: |
          This will share your address and landlord's name, but not your name
          or apartment number.
      - Get a city inspection: get_inspection
      # - Withhold rent: withhold_rent
      - Fix the problems myself and deduct money from my rent: fix_problems
      - Ask a judge to order my landlord to fix the problem: get_injunction
      - Sue my landlord for money: sue_landlord
    default:
      - get_report

validation code: |
  if screen_ll_knows_problem and len(document_choice.true_values()) < 1:
    validation_error("Select at least one.", field="document_choice")
terms:
  retaliated: |
    Retaliation could include evicting you or raising your rent because you
    complained about housing problems. Retaliation is illegal and you have
    protections in a court.
---
objects:
  - organize_tenants_attachment[i]: DAStaticFile.using(filename="lt1-pullout-10-getting-organized.pdf")
  - sue_your_landlord_attachment[i]: DAStaticFile.using(filename="lt1-pullout-13-taking-landlord-to-court.pdf")
---  
objects:
  - organize_tenants_attachment: ALDocument.using(title="Organize!", filename="lt1-pullout-10-getting-organized")
  - sue_your_landlord_attachment: ALDocument.using(title="Sue your Landlord", filename="sue_your_landlord")
  - request_housing_inspection_attachment: ALDocument.using(title="Letter to Request Housing Inspection", filename="inspection_request")
---
attachment:
  variable name: request_housing_inspection_attachment[i]
  docx template file: letter_to_request_inspection.docx
---
id: interview_order_request_housing_inspection
code: |
  users[0].name.first
  users[0].address.address
  users[0].address.geocode()
  other_parties[0].name.first
  other_parties[0].address.address
  interview_order_request_housing_inspection = True
---
#id: board 
---
code: |
  organize_tenants_attachment.enabled = screen_ll_knows_problem and document_choice['organize_tenants'] 
---
code: |
  checklist_attachment.enabled = action_argument('enabled') or screen_ll_knows_problem and document_choice['get_report']
---
code: |
  conditions_report_attachment.enabled = action_argument('enabled') or screen_ll_knows_problem and document_choice['get_report']
---
code: |
  request_housing_inspection_attachment.enabled = screen_ll_knows_problem and document_choice['get_inspection']
---
code: |
  sue_your_landlord_attachment.enabled = screen_ll_knows_problem and document_choice['sue_landlord']
---
code: |
  tenant_repair_request_attachment.enabled = not screen_ll_knows_problem or document_choice['tell_landlord']
---
#code: |
#  Rent_Withholding_Letter_attachment.enabled = document_choice['withhold_rent']
---
objects:
  - housing_code_bundle: ALDocumentBundle.using(elements=[
      checklist_attachment,
      conditions_report_attachment,
      organize_tenants_attachment,      
      tenant_repair_request_attachment,
      request_housing_inspection_attachment,
      sanitary_code_template_attachment,
      sue_your_landlord_attachment,
      Housing_Temporary_Restraining_Order0002_attachment],
      title="Your housing conditions toolkit", filename="housing_conditions_documents")
  # Rent_Withholding_Letter_attachment,    
---
id: download_conditions_checklist_docs
event: download_conditions_checklist_docs
question: |
  Your documents are ready
subquestion: |
  % if screen_ll_knows_problem:
  ${ housing_code_bundle.download_list_html(format="docx") }

  ${ housing_code_bundle.send_button_html() }
  % else: 
  ${ tenant_repair_letter_bundle.download_list_html(format="docx") }
  
  ${ tenant_repair_letter_bundle.send_button_html() }
  % endif  
---
event: download_checklist
id: download checklist
question: |
  Housing Code Checklist
subquestion: |
  ${ checklist_bundle.download_list_html() }
  
  ${ checklist_bundle.send_button_html() }
---
code: |
  # TODO: we may not want this always enabled if the bundles change
  sanitary_code_instructions_attachment.enabled = False
  sanitary_code_template_attachment.enabled = screen_ll_knows_problem and screen_contacted_housing_inspector and document_choice.get('enforce_inspection')
---
code: |
  Housing_Temporary_Restraining_Order0002_attachment.enabled = screen_ll_knows_problem and document_choice['get_injunction']
---
event: download_petition_to_enforce_sanitary_code
id: download sanitary code
question: |
  Your file is ready to download
subquestion: |
  ${ sanitary_code_bundle.download_list_html() }
  
  ${ sanitary_code_bundle.send_button_html() }

---
objects:
  - sanitary_code_bundle: ALDocumentBundle.using(elements=[sanitary_code_instructions_attachment, sanitary_code_template_attachment], filename="petition_to_enforce_sanitary_code")
  - checklist_bundle: ALDocumentBundle.using(elements=[checklist_attachment], title="Housing Code Checklist", filename="housing_code_checklist")
---
objects: 
  - checklist_attachment: ALDocument.using(title="Housing Code Checklist", filename="housing_code_checklist")
  - conditions_report_attachment: ALDocument.using(title="Housing Conditions Report", filename="housing_conditions_report")
---
attachment:
  variable name: checklist_attachment[i]
  docx template file: Housing_Code_Checklist.docx
---
attachment:
  variable name: conditions_report_attachment[i]
  docx template file: Evidence_packet.docx
---
id: details for this claim
question: |
  More information about "${ bad_conditions[i].df.loc[j]['Interview description'].lower().lstrip() }"
fields:
  - This problem was there when I moved in: bad_conditions[i].details[j].condition_existed_at_start
    datatype: yesno
  - Date this problem started: bad_conditions[i].details[j].start_date
    datatype: date
    help: |
      Use the month and year if that is the best that you know.
    hide if: bad_conditions[i].details[j].condition_existed_at_start    
  - The problem is fixed: bad_conditions[i].details[j].condition_ended
    datatype: yesno
  - Date problem ended: bad_conditions[i].details[j].end_date
    datatype: date
    show if: bad_conditions[i].details[j].condition_ended
  - Describe the problem using your own words: bad_conditions[i].details[j].description
    datatype: area
    required: False
  - Add a photo or other proof of the problem, if you have it: bad_conditions[i].details[j].files
    datatype: files
    required: False
---    
id: names of opposing parties
question: |
  What is your landlord's name?

fields:
  - I do not know my landlord's name: ll_name_unknown
    datatype: yesno
  - note: |
      **Okay**. You can still fill in this form, but you will need
      to write in your landlord's name on every form before you deliver
      it. You may be able to find their name by visiting the Registry of
      Deeds for your city or town.
    show if: ll_name_unknown
  - Are they a person, or a business?: other_parties[0].person_type
    input type: radio
    choices:
      - Business or organization: business
      - Person: individual
    hide if: ll_name_unknown      
  - First name: other_parties[0].name.first
    show if:
      variable: other_parties[0].person_type
      is: "individual"
  - Last name: other_parties[0].name.last
    show if:
      variable: other_parties[0].person_type      
      is: "individual"
  - Suffix: other_parties[0].name.suffix
    code: |
      name_suffix()
    show if:
      variable: other_parties[0].person_type      
      is: "individual"
    required: False      
  - Name of organization or business: other_parties[0].name.first
    show if:
      variable: other_parties[0].person_type
      is: business
validation code: |
  if ll_name_unknown:
    other_parties[0].name.first = "[ Landlord's Name ]"
---
id: your address
question: |
  What is your landlord's address?
fields:
  - I do not know my landlord's address: ll_address_unknown
    datatype: yesno
  - note: |
      **Okay**. You need your landlord's address for many of the forms on
      this website. You can still finish this form but you will need to add
      your landlord's address before you deliver the form.
    show if: ll_address_unknown       
  - Street address: other_parties[0].address.address
    address autocomplete: True
    hide if: ll_address_unknown
  - Unit: other_parties[0].address.unit
    required: False
    hide if: ll_address_unknown    
  - City: other_parties[0].address.city
    hide if: ll_address_unknown  
  - State: other_parties[0].address.state
    hide if: ll_address_unknown  
    code: |
      states_list()
    default: MA      
  - Zip: other_parties[0].address.zip
    required: False
    hide if: ll_address_unknown
validation code: |
  if ll_address_unknown:
    other_parties[0].address.address = "[ Landlord's address ]"
    other_parties[0].address.city = "[ Landlord's city ]"
---
continue button field: explain_documents
question: |
  We may have a few more questions
subquestion: |
  On the next screens, we will ask whatever questions are needed to finish
  creating the documents that you asked for. 
  
  At the end, you will have a chance to download and email the documents for
  yourself or send them to someone else.
---
continue button field: organizing_interstitial
id: organizing
question: |
  Work together with your neighbors
subquestion: |
  You can solve your problem better together!
  A tenant's union is a group of tenants working together. Your local tenant's
  union may have:
  
  1. Regular meetings to talk about problems with neighbors.
  1. Organizers who will negotiate with your landlord.
  1. Protests to help defend tenant's rights.
    
  % if hasattr(users[0].address, 'norm_long'):
  % if users[0].address.norm_long.city in ['Saugus', 'Revere', 'Everett', 'Chelsea', 'Winthrop', 'Boston', 'Milton', 'Quincy', 'Braintree', 'Hingham', 'Weymouth', 'Somerville', 'Cambridge', 'Watertown', 'Arlington', 'Medford', 'Newton', 'Framingham', 'Lynn', 'East Boston', 'Springfield']:
  Here are some tenant unions that cover the city you live in:
  
  % endif
  % if users[0].address.norm_long.city in ['Saugus', 'Revere', 'Everett', 'Chelsea', 'Winthrop', 'Boston', 'Milton', 'Quincy', 'Braintree', 'Hingham', 'Weymouth', 'Somerville', 'Cambridge', 'Watertown', 'Arlington', 'Medford', 'Newton', 'Framingham']:
  #### [City Life/Vida Urbana](https://www.clvu.org/)
  
  284 Amory Street, First Floor, Jamaica Plain, MA 02130
  
  ${ tel("(617) 524-3541") }
  
  % endif
  % if users[0].address.norm_long.city in ['Chelsea','Revere','Everett','Lynn','East Boston']:
  #### [La Colaborativa / Chelsea Collaborative](https://www.la-colaborativa.org/)
  
  318 Broadway, Chelsea, MA 02150
  
  ${ tel("(617) 889-6080") }
  % endif
  % if users[0].address.norm_long.city  == 'Lynn':  
  
  #### [Lynn United for Change](http://www.lynnunited.org/housing)
  112 Exchange St, Lynn, MA 01901
  
  ${ tel("(781) 346-9199") }
  % endif
  % if users[0].address.norm_long.city == 'Boston':
  #### Boston Tenant's Union
  ${ tel("617-209-9263") }
  % endif
  % if users[0].address.norm_long.city  == 'Springfield':
  #### [Springfield No one Leaves](http://www.springfieldnooneleaves.org/)
  
  ${ tel("413-342-1804") }
  % endif
  % endif
  
  Tenant groups in Massachusetts:
  
  * [City Life/Vida Urbana](https://clvu.org) (metro Boston)
  * [La Colaborativa](https://www.la-colaborativa.org/) (Chelsea and neighboring cities)
  * [Lynn United](http://www.lynnunited.org/housing) (Greater Lynn)
  * [Springfield No One Leaves](http://www.springfieldnooneleaves.org/) (Greater Springfield)
  * [Boston Tenant's Union](https://bostontenantsunion.org/)
---
continue button field: explain_sharing
question: |
  Thank you for sharing your information
subquestion: |
  Your name and apartment number will stay private.
---
code: |
  package_name = "docassemble-HousingCodeChecklist"
  github_user = "nonprofittechy"
  feedback_form = user_info().package + ":feedback.yml"