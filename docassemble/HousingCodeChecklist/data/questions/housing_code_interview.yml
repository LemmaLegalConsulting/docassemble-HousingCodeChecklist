---
translations:
  - housing_code_interview_es.xlsx
  - housing_code_interview_pt.xlsx
  - housing_code_interview_ht.xlsx
---
include:
  - docassemble.AssemblyLine:assembly_line.yml
  - docassemble.ALAffidavitOfIndigency:affidavit_body.yml
  - docassemble.ALToolbox:display_template.yml
  - docassemble.GithubFeedbackForm:embedded_review.yml
  - Repair_Demand_Letter_to_include.yml
  - verified_complaint_and_motions_to_include.yml
  - Repair_Letter_Tenant.yml
  - customized_screens.yml
# commenting out until we have translations
#  - language.yml
  - simple_conditions.yml
  - orders_and_contempt_complaint.yml
  - discovery.yml
  - autoterms.yml
---
features:
  bootstrap theme: uptocode.bootstrap.css
---
metadata:
  title: |-
    UpToCode
  authors:
    - Quinten Steenhuis
    - Michael Cronin
    - Joelle Ataya
    - Cherise Barandao
    - Christopher Selak    
    - Michael Carroll
    - Maeve MacGlinchey
    - Caroline Robinson
    - Plocket
    - Kate Barry
    - Lily Yang
    - Matthew Brooks
    - Lance Godard
    - Kendall Garner
    - David Colarusso
    - Sofija Belacjic
    - Mia Bonardi
    - Stavros Constantinou
    - Kelly McGuire
  title url: |
    https://uptocode.org
  tags:
    - HO-00-00-00-00
comment: |
  Some of the documents that this interview assembles
  use work done as part of the Assembly Line project.
---
default screen parts:
  logo: |
    <img src="${ uptocode_logo.url_for() }"><div class="title"></div>
  short logo: |
    <img src="${ uptocode_logo.url_for() }"><div class="title"></div>
  # commenting out until we have translations
  #navigation bar html: |
    #% if defined('acknowledged_information_use'):
    #${ get_language_list(get_tuples(['en','es','pt','ht']),current=user_language) }
    #% endif
---
# setting user language to English until we have translations
code: |
  user_language = "en"
---
code: |
  # Allow downloads on the custom error screen
  al_enable_incomplete_downloads = True
---
variable name: allowed_courts
data:
  - Boston Municipal Court
  - District Court
  - Housing Court
  - Superior Court
---
mandatory: True
id: interview order
code: |
  initial_action_display_cards
  if initial_action_selection == "help_in_court":
    intro_and_terms_of_use_in_court
  else:
    intro_and_terms_of_use
  person_answering
  if person_answering == "attorney" and representation_type == "entering_appearance":
    users[0].attorney.name.first
  users[0].name.first
  intro_terms_of_use
  if initial_action_selection == "help_in_court":
    nav.set_section('review_conditions')
    kind_of_lawsuit
    set_document_choice_by_lawsuit_kind
    if initial_screen_tenant_facing_eviction in('pending', 'has case'):
      warn_eviction
    if kind_of_lawsuit.any_true("get_emergency_repairs", "past_repair_needs"):
      if not tenant_sent_ll_notice:
        confirm_suing_choice
      if not tenant_called_inspector:
        add_inspection_letter
      interview_order_navigate_conditions
  
  snapshot_interview_state
  
  if initial_action_selection in ["document_by_room", "give_notice"]:
    interview_order_navigate_conditions
  nav.set_section('main_triage_screen')
  screen_ll_knows_problem
  reconsider('snapshot_interview_state')
  nav.set_section('provide_details')
  
  if not kind_of_lawsuit["file_contempt_complaint"] and not len(kind_of_lawsuit) == 1:
    include_conditions_in_complaint # Evaluate so it is available in complaint template
  
  if not screen_ll_knows_problem:
    reconsider("al_nav_sections")
    nav.set_section("review_tenant_repair_request")
    interview_order_tenant_repair_request
    nav.set_section("organizing_interstitial")
    organizing_interstitial
  else:
    explain_documents
    reconsider("al_nav_sections")
  if screen_ll_knows_problem and document_choice['get_report']:
    nav.set_section("review_checklist")
    users[0].address.address
    users[0].mailing_address.address
    other_parties.gather()
    other_parties[0].address.address
  if screen_ll_knows_problem and document_choice['tell_landlord']:
    nav.set_section("review_tenant_repair_request")
    interview_order_tenant_repair_request
  #if screen_ll_knows_problem and document_choice['share_with_tenants']:
  #  nav.set_section("share_with_tenants")
  #  explain_sharing
  #  store_for_tenant_sharing
  if screen_ll_knows_problem and document_choice['organize_tenants']:
    nav.set_section("organizing_interstitial")
    users[0].address.address
    users[0].mailing_address.address
    try:
      users[0].address.geocode()
    except:
      pass
    organizing_interstitial
  if screen_ll_knows_problem and document_choice['get_inspection']:
    nav.set_section("review_request_housing_inspection")
    interview_order_request_housing_inspection
  if screen_ll_knows_problem and document_choice['demand_letter_93a']:
    nav.set_section("review_Repair_Demand_Letter")
    interview_order_Repair_Demand_Letter
  if screen_ll_knows_problem and document_choice['sue_landlord']:
    nav.set_section("review_verified_complaint_and_motion")
    if person_answering == "attorney" and representation_type == "entering_appearance":
      users[0].attorney.address.address
    interview_order_verified_complaint_and_motions
  if screen_ll_knows_problem and document_choice["contempt_complaint"]:
    interview_order_contempt_complaint
  if screen_ll_knows_problem and document_choice["contempt_complaint"]:
    interview_order_contempt_complaint
  
  nav.set_section('review_and_sign')
  uptocode_review
  basic_questions_signature_flow
  
  if document_choice["get_inspection"] and users[0].address.city.lower() == "chelsea":
    direct_inspection_email
  else:
    direct_inspection_email = False
      
  reached_download_screen = True
  reconsider('snapshot_interview_state')
  nav.set_section('download_conditions_checklist_docs')

  # Kick off the background assembly tasks
  tasks_to_monitor = []
  if screen_ll_knows_problem and len(housing_code_bundle.enabled_documents()) > 0:
    housing_code_bundle.generate_downloads_with_docx_task
    tasks_to_monitor.append(housing_code_bundle.generate_downloads_with_docx_task)
  tenant_repair_letter_bundle.generate_downloads_with_docx_task
  tasks_to_monitor.append(tenant_repair_letter_bundle.generate_downloads_with_docx_task)
  if screen_ll_knows_problem and document_choice['sue_landlord'] or document_choice["contempt_complaint"]:
    affirmative_complaint_bundle.generate_downloads_with_docx_task
    tasks_to_monitor.append(affirmative_complaint_bundle.generate_downloads_with_docx_task)
  
  if not all(task.ready() for task in tasks_to_monitor):
    al_download_waiting_screen

  download_conditions_checklist_docs
---
code: |
  if person_answering == "attorney" and representation_type == "entering_appearance":
    signature_fields = ["users[0].attorney.signature"]
  else:
    signature_fields = ["users[0].signature"]
---
code: |
  nav.set_section('review_conditions')
  bad_conditions["common problems"].claims
  for claim in bad_conditions["common problems"].claims.true_values():
    bad_conditions["common problems"].details[claim].condition_existed_at_start
  if wants_detailed_conditions:
    # go to the opening screen first, instead of asking "is there another" question
    bad_conditions.gather()
    if bad_conditions.count_conditions() > 0:
      # This is a bit of a workaround
      for room in bad_conditions:
        for condition in bad_conditions[room].claims.true_values().difference(bad_conditions.get("common problems",DAEmpty()).claims.true_values()):
          bad_conditions[room].details[condition].condition_existed_at_start  
      review_conditions
    else:
      warn_add_conditions
  else:
    bad_conditions.gathered = True
  interview_order_navigate_conditions = True
---
code: |
  al_form_requires_digital_signature = False
---
reconsider: True
code: |
  include_conditions_in_complaint = bad_conditions.count_conditions() > 0
---
objects:
  - users[0].attorney: ALIndividual
---
objects:
  #- document_problems_image: DAStaticFile.using(filename="dripping_faucet.jpg")
  #- notify_image: DAStaticFile.using(filename="typewriter_luca-onniboni-4v9Kk01mEbY-unsplash1.jpg")
  #- help_in_court_image: DAStaticFile.using(filename="gavel_wesley-tingey-9z9fxr_7Z-k-unsplash_Cropped.jpg")
  #- eviction_image: DAStaticFile.using(filename="apartments_anders-holm-jensen-urYCLa2G4Lg-unsplash_Cropped.jpg")
  - eviction_image: DAStaticFile.using(filename="undraw_coming_home_re_ausc.svg")
  - explore_problems_image: DAStaticFile.using(filename="standing-1.svg")
  - get_order_from_judge_image: DAStaticFile.using(filename="judge_katerina_limpitsouni.svg")
  - resume_session_image: DAStaticFile.using(filename="undraw_folder_files_re_2cbm.svg")
  - uptocode_logo: DAStaticFile.using(filename="horiztonal-white1.5x_blue.svg")
---
event: initial_action_display_cards
id: landing-page
question: |
  You deserve a safe and decent home
subquestion: |
  Need help to get repairs or enforce your rights as a **Massachusetts** tenant? Pick a task.
  
  
  % if device() and hasattr(device(), "is_mobile") and device().is_mobile:

  <div class="row g-3 mb-2">
  <div class="col-md-6">
  <div class="card" style="max-width: 540px;">
    <div class="row g-0">
      <div class="col-md-8">
        <div class="card-body bg-info">
          <h5 class="card-title"><i class="fa-solid fa-magnifying-glass"></i> Describe problems and find solutions</h5>
          <p class="card-text">List problems by room and category and get your landlord to fix them.</p>
          <a class="btn btn-primary stretched-link align-self-end" href="${ url_action("initial_action", selection="document_by_room") }" role="button" id="start_your_list">Start your list</a>
        </div>
      </div>
    </div>
  </div>
  </div>
  <div class="col-md-6">
  <div class="card" style="max-width: 540px;">
    <div class="row g-0">
      <div class="col-md-8">
        <div class="card-body bg-info">
          <h5 class="card-title"><i class="fa-solid fa-gavel"></i> Get an order from a judge</h5>
          <p class="card-text">Get an emergency order or an order for your landlord to pay you money.</p>
          <a class="btn btn-primary stretched-link align-self-end" href="${ url_action("initial_action", selection="help_in_court") }" role="button">Get help in court</a>
        </div>
      </div>
    </div>
  </div>
  </div>

  <div class="col-md-6">
  <div class="card" style="max-width: 540px;">
    <div class="row g-0">
      <div class="col-md-8">
        <div class="card-body bg-info">
          <h5 class="card-title"><i class="fa-solid fa-user-shield"></i> Defend against an eviction</h5>
          <p class="card-text">Getting evicted? Stop the eviction before you do anything else.</p>
          <a class="btn btn-primary stretched-link align-self-end" href="https://interviews.gbls.org/start/eviction/" role="button">Defend against an eviction</a>
        </div>
      </div>
    </div>
  </div>
  </div>

  % if get_saved_interview_list(filename=user_info().filename, exclude_current_filename=False, exclude_newly_started_sessions=True):
  <div class="col-md-6">
  <div class="card" style="max-width: 540px;">
    <div class="row g-0">
      <div class="col-md-8">
        <div class="card-body bg-info">
          <h5 class="card-title"><i class="fa-solid fa-clock-rotate-left"></i> Keep working</h5>
          <p class="card-text">You have already started using UpToCode. You can start from where you left off.</p>
          <a class="btn btn-primary stretched-link align-self-end" href="${ interview_url(i=f"{user_info().package}:load_answers.yml") }" role="button">Use my previous answers</a>
        </div>
      </div>
    </div>
  </div>
  </div>
  % endif

  </div>
  
  % else:

  <div class="row g-3 mb-2">
  <div class="col-md-6">
  <div class="card" style="max-width: 540px;">
    <div class="row g-0">
      <div class="col-md-4 d-flex align-content-end">
        <img src="${ explore_problems_image.url_for() }" class="img-fluid rounded-start" alt="illustration - person standing, ready to act">
      </div>
      <div class="col-md-8">
        <div class="card-body">
          <h5 class="card-title">Describe problems and find solutions</h5>
          <p class="card-text">List problems by room and category and get your landlord to fix them.</p>
          <a class="btn btn-primary stretched-link align-self-end" href="${ url_action("initial_action", selection="document_by_room") }" role="button" id="start_your_list">Start your list</a>
        </div>
      </div>
    </div>
  </div>
  </div>
  <div class="col-md-6">
  <div class="card" style="max-width: 540px;">
    <div class="row g-0">
      <div class="col-md-4 d-flex align-content-end">
        <img src="${ get_order_from_judge_image.url_for() }" class="img-fluid rounded-start" alt="illustration - judge holding gavel">
      </div>
      <div class="col-md-8">
        <div class="card-body">
          <h5 class="card-title">Get an order from a judge</h5>
          <p class="card-text">Get an emergency order or an order for your landlord to pay you money.</p>
          <a class="btn btn-primary stretched-link align-self-end" href="${ url_action("initial_action", selection="help_in_court") }" role="button">Get help in court</a>
        </div>
      </div>
    </div>
  </div>
  </div>

  <div class="col-md-6">
  <div class="card" style="max-width: 540px;">
    <div class="row g-0">
      <div class="col-md-4 d-flex align-content-end" style="max-height: 12em;">
        <img src="${ eviction_image.url_for() }" class="img-fluid rounded-start" alt="illustration - apartment building">
      </div>
      <div class="col-md-8">
        <div class="card-body">
          <h5 class="card-title">Defend against an eviction</h5>
          <p class="card-text">Getting evicted? Stop the eviction before you do anything else.</p>
          <a class="btn btn-primary stretched-link align-self-end" href="https://interviews.gbls.org/start/eviction/" role="button">Defend against an eviction</a>
        </div>
      </div>
    </div>
  </div>
  </div>

  % if get_saved_interview_list(filename=user_info().filename, exclude_current_filename=False, exclude_newly_started_sessions=True):
  <div class="col-md-6">
  <div class="card" style="max-width: 540px;">
    <div class="row g-0">
      <div class="col-md-4 d-flex align-content-end" style="max-height: 12em;">
        <img src="${ resume_session_image.url_for() }" class="img-fluid rounded-start" alt="illustration - open files">
      </div>
      <div class="col-md-8">
        <div class="card-body">
          <h5 class="card-title">Keep working</h5>
          <p class="card-text">You have already started using UpToCode. You can start from where you left off.</p>
          <a class="btn btn-primary stretched-link align-self-end" href="${ interview_url(i=f"{user_info().package}:load_answers.yml") }" role="button">Use my previous answers</a>
        </div>
      </div>
    </div>
  </div>
  </div>
  % endif

  </div>
  
  % endif
css: |
  <style>
  .question-landing-page div.container {
    max-width: 100rem;
  }
  </style>
---  
comment: |
  #   <div class="col">
  #     <div class="card h-100">
  #       <img src="${ notify_image.url_for() }" class="card-img-top" alt="...">
  #       <div class="card-body">
  #         <h5 class="card-title">Tell your landlord or city</h5>
  #         <p class="card-text">Answer simple questions to give your landlord or the city legal notice of the problems.</p>
  #         <a class="btn btn-primary stretched-link align-self-end" href="${ url_action("initial_action", selection="give_notice") }" role="button">Write a letter</a>
  #       </div>
  #     </div>
  #   </div>
  #   <div class="col">
  #     <div class="card h-100">
  #       <img src="${ help_in_court_image.url_for() }" class="card-img-top" alt="...">
  #       <div class="card-body">
  #         <h5 class="card-title">Get help in court</h5>
  #         <p class="card-text">Sue your landlord or ask a judge to order an emergency repair.</p>
  #         <a class="btn btn-primary stretched-link align-self-end" href="${ url_action("initial_action", selection="help_in_court") }" role="button">Get help from a judge</a>
  #       </div>      
  #     </div>
  #   </div>
  #   <div class="col">
  #     <div class="card h-100">
  #       <img src="${ eviction_image.url_for() }" class="card-img-top" alt="...">
  #       <div class="card-body">
  #         <h5 class="card-title">Defend against an eviction</h5>
  #         <p class="card-text">Getting evicted? Stop the eviction before you do anything else.</p>
  #         <a class="btn btn-primary stretched-link align-self-end" href="https://interviews.gbls.org/start/eviction/" role="button">Defend against an eviction</a>
  #       </div>
  #     </div>
  #   </div>
  # </div>
---
continue button field: intro_and_terms_of_use_in_court
question: |
  Get an order from a judge
subquestion: |
  <div class="alert alert-secondary h-100 mh-100" role="alert">
    <h2 class="h4 alert-heading"><i class="fa-solid fa-signs-post"></i> How this works</h2>
    <p class="h-100 overflow-visible mb-0">

  On the next few screens you can:

  <ol>
  <li>
  Tell us about the problems you are having with your landlord.
  </li>
  <li>
  Answer step-by-step questions.
  </li>
  <li>
  Download your completed documents, print, and file in court.
  </li>
  </p>
  </div>
  It takes most tenants about 45 minutes to finish.

  -------
  <h2 class="h4 alert-heading">Tips for navigating UpToCode</h2>
  
  You can click <svg class="svg-inline--fa fa-circle-question" aria-hidden="true" focusable="false" data-prefix="fas" data-icon="circle-question" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" data-fa-i2svg=""><path fill="#c7e6b0" d="M256 512c141.4 0 256-114.6 256-256S397.4 0 256 0S0 114.6 0 256S114.6 512 256 512zM169.8 165.3c7.9-22.3 29.1-37.3 52.8-37.3h58.3c34.9 0 63.1 28.3 63.1 63.1c0 22.6-12.1 43.5-31.7 54.8L280 264.4c-.2 13-10.9 23.6-24 23.6c-13.3 0-24-10.7-24-24V250.5c0-8.6 4.6-16.5 12.1-20.8l44.3-25.4c4.7-2.7 7.6-7.7 7.6-13.1c0-8.4-6.8-15.1-15.1-15.1H222.6c-3.4 0-6.4 2.1-7.5 5.3l-.4 1.2c-4.4 12.5-18.2 19-30.6 14.6s-19-18.2-14.6-30.6l.4-1.2zM288 352c0 17.7-14.3 32-32 32s-32-14.3-32-32s14.3-32 32-32s32 14.3 32 32z"></path></svg> 
  question mark icons, {green words}, or underlined links with a triangle next to them to see more information.
  ${ collapse_template(collapsible_info_template) }
  
  Fields that are required to be filled out before you progress will have a <span style="color: red">*</span> red asterisk next to them.
  
  You will have a chance to review and edit all of the information you have entered at various checkpoints. 
  
  Clicking <span style="color: var(--bs-link-color); text-decoration: underline">Undo</span> will remove the information you have entered on the current and previous screen.
  
  -------
  
  ${ display_template(about_page_contents, scrollable=True, collapse=True) }
fields:
  - To continue, you must accept the Terms of Use: acknowledged_information_use
    datatype: checkboxes
    none of the above: False    
    minlength: 1
    choices:
      - I accept the Terms of Use.
    validation messages:
      minlength: |
        You can only continue if you agree to the Terms of Use.

---
id: How UpToCode works
continue button field: intro_and_terms_of_use
question: |
  Get the problems in your home fixed
subquestion: |
  <div class="alert alert-secondary h-100 mh-100" role="alert">
    <h2 class="h4 alert-heading"><i class="fa-solid fa-signs-post"></i> How UpToCode works</h2>
    <p class="h-100 overflow-visible mb-0">

  On the next few screens you can:

  <ol>
  <li>
    Make a list of the problems in each room of your home. You can add dates and photos too.
  </li>
  <li>
  Answer questions to help you:
  <ul>
  <li>Write a letter to your landlord.</li>
  <li>Ask the city for an inspection. Or</li>
  <li>Ask a judge to order your landlord to fix the problem.</li>
  </ul>
  </li>
  <li>
  Download, print, and deliver your completed documents to the right place.
  </li>
  </ul>
  </p>
  </div>

  It takes most tenants 20 minutes to 1 hour to answer the questions and get the documents they need.
  
  -------
  <h2 class="h4 alert-heading">Tips for navigating UpToCode</h2>
  
  You can click <svg class="svg-inline--fa fa-circle-question" aria-hidden="true" focusable="false" data-prefix="fas" data-icon="circle-question" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" data-fa-i2svg=""><path fill="#c7e6b0" d="M256 512c141.4 0 256-114.6 256-256S397.4 0 256 0S0 114.6 0 256S114.6 512 256 512zM169.8 165.3c7.9-22.3 29.1-37.3 52.8-37.3h58.3c34.9 0 63.1 28.3 63.1 63.1c0 22.6-12.1 43.5-31.7 54.8L280 264.4c-.2 13-10.9 23.6-24 23.6c-13.3 0-24-10.7-24-24V250.5c0-8.6 4.6-16.5 12.1-20.8l44.3-25.4c4.7-2.7 7.6-7.7 7.6-13.1c0-8.4-6.8-15.1-15.1-15.1H222.6c-3.4 0-6.4 2.1-7.5 5.3l-.4 1.2c-4.4 12.5-18.2 19-30.6 14.6s-19-18.2-14.6-30.6l.4-1.2zM288 352c0 17.7-14.3 32-32 32s-32-14.3-32-32s14.3-32 32-32s32 14.3 32 32z"></path></svg> 
  question mark icons, {green words}, or underlined links with a triangle next to them to see more information.
  ${ collapse_template(collapsible_info_template) }
  
  Fields that are required to be filled out before you progress will have a <span style="color: red">*</span> red asterisk next to them.
  
  You will have a chance to review and edit all of the information you have entered at various checkpoints. 
  
  Clicking <span style="color: var(--bs-link-color); text-decoration: underline">Undo</span> will remove the information you have entered on the current and previous screen.
  
  -------
  
  ${ display_template(about_page_contents, scrollable=True, collapse=True) }
  
fields:
  - To continue, you must accept the Terms of Use.: acknowledged_information_use
    datatype: checkboxes
    none of the above: False    
    minlength: 1
    choices:
      - I accept the Terms of Use.
    validation messages:
      minlength: |
        You can only continue if you agree to the Terms of Use.
---
id: collapsible_info_template
template: collapsible_info_template
subject: Click here to see more information
content: |
  You can find more information or definitions by clicking on these links.
---
event: initial_action
code: |
  initial_action_selection = action_argument("selection")
  initial_action_display_cards = True
---
code: |
  enable_al_nav_sections = True
  # See: https://assemblyline.suffolklitlab.org/docs/components/AssemblyLine/navigation
---
language: en
variable name: al_nav_sections
data:
  - section_getting_started: Getting started
  - review_conditions: List problems
  - main_triage_screen: Choose a solution
  - provide_details: Answer questions
    subsections:
      - review_checklist: My checklist
        hidden: ${ not showifdef("document_choice['get_report']") }
      - review_tenant_repair_request: Tell my landlord
        hidden: ${ not (showifdef("document_choice['tell_landlord']") or showifdef("screen_ll_knows_problem")) }
      - organizing_interstitial: Organize
        hidden: ${ not showifdef("document_choice['organize_tenants']") }
      - review_request_housing_inspection: Get an inspection
        hidden: ${ not showifdef("document_choice['get_inspection']") }
      - review_Repair_Demand_Letter: Write a demand letter
        hidden: ${ not showifdef("document_choice['demand_letter_93a']") }
      # Repair and deduct is unused!
      #- review_repair_and_deduct: Fix the problems myself
      #  hidden: ${ not showifdef("document_choice['fix_problems']") }
      - review_verified_complaint_and_motion: Sue my landlord
        hidden: ${ not showifdef("document_choice['sue_landlord']") }
      - review_discovery: Discovery
        hidden: ${ not showifdef("wants_discovery") }
      - review_fee_waiver: Fee waiver
        hidden: ${ not showifdef("verified_complaint_wants_fee_waiver") }
      - review_Contempt_Complaint: Ask judge to enforce their own order
        hidden: ${ not showifdef("document_choice['contempt_complaint']") }
  - review_and_sign: Review and sign
  - download_conditions_checklist_docs: Download
---
language: es
variable name: al_nav_sections
data:
  - section_getting_started: Empezar
  - review_conditions: Lista de problemas
  - main_triage_screen: Elegir una solución
  - provide_details: Responder preguntas
    subsections:
      - review_checklist: Mi lista de verificación
        hidden: ${ not showifdef("document_choice['get_report']") }
      - review_tenant_repair_request: Decirle a mi dueño
        hidden: ${ not (showifdef("document_choice['tell_landlord']") or showifdef("screen_ll_knows_problem")) }
      - organizing_interstitial: Organizar
        hidden: ${ not showifdef("document_choice['organize_tenants']") }
      - review_request_housing_inspection: Obtener una inspección
        hidden: ${ not showifdef("document_choice['get_inspection']") }
      - review_Repair_Demand_Letter: Escribir una carta de demanda
        hidden: ${ not showifdef("document_choice['demand_letter_93a']") }
      # Repair and deduct is unused!
      #- review_repair_and_deduct: Arreglar los problemas yo mismo
      #  hidden: ${ not showifdef("document_choice['fix_problems']") }
      - review_verified_complaint_and_motion: Demandar a mi dueño
        hidden: ${ not showifdef("document_choice['sue_landlord']") }
      - review_discovery: Descubrimiento
        hidden: ${ not showifdef("wants_discovery") }
      - review_fee_waiver: Exención de tarifas
        hidden: ${ not showifdef("verified_complaint_wants_fee_waiver") }
      - review_Contempt_Complaint: Pedirle al juez que haga cumplir su propia orden
        hidden: ${ not showifdef("document_choice['contempt_complaint']") }
  - review_and_sign: Revisar y firmar
  - download_conditions_checklist_docs: Descargar
---
# This is here to enable configuring choices like `auto open`
# but it isn't used! al_nav_sections takes priority
sections:
  - section_getting_started: Getting started
auto open: True
---
modules:
  - .load_data
  - docassemble.ALToolbox.misc
---
code: |
  stuff_to_snapshot = {
     'start_time': str(start_time().format('yyyy-MM-dd')),
     'address_city': showifdef('users[0].address.city'),
     'zip': showifdef('users[0].address.zip'),
     'language': user_language,
     }    
  try:  
    stuff_to_snapshot['document_choice'] = comma_list(document_choice.true_values())
    stuff_to_snapshot['reached_document_choice_screen'] = True
  except:
    pass  
  flattened_conditions = []
  if defined("bad_conditions") and include_conditions_in_complaint:
    for category in bad_conditions.complete_elements():
      flattened_conditions.extend(bad_conditions[category].claims.true_values())

  stuff_to_snapshot['bad_conditions'] = comma_list(flattened_conditions)
  if defined('reached_download_screen'):
    stuff_to_snapshot['reached_download_screen'] = True
  
  log(stuff_to_snapshot)
  store_variables_snapshot(
      data=stuff_to_snapshot, persistent=True
     )
  snapshot_interview_state = True
  log('saved the snapshot')
---
id: launch made
continue button field: launch_made
question: |
  Stop your eviction
subquestion: |
  Tap the link below to start using MADE, Massachusetts Defense
  for Eviction in a new window.
  
  When you are finished, you can come back here.
  
  ${ action_button_html('https://interviews.gbls.org/start/eviction', label='Launch MADE') } 
---
continue button field: review_conditions
id: choose a sue your landlord action
question: |
  % if person_answering == "tenant":
  Why do you need to take your landlord to court?
  % else:
  Why does the tenant need to take their landlord to court?
  % endif
fields:
  - Choose any that apply: kind_of_lawsuit
    datatype: checkboxes
    choices:
      - label: |
          % if person_answering == "tenant":
          I need repairs to my home now
          % else:
          The tenant needs repairs to their home now
          % endif
        value: get_emergency_repairs
      - label: |
          % if person_answering == "tenant":
          I needed repairs to my home in the past 6 years
          % else:
          The tenant needed repairs to their home in the past 6 years
          % endif
        value: past_repair_needs
        help: |
          You can choose this even if some or all of the problems are fixed now.
      - label: |
          % if person_answering == "tenant":
          My landlord changed my locks or moved my things or threatened to do so
          % else:
          The landlord changed the tenant's locks or moved their things or threatened to do so
          % endif
        value: illegal_lockout          
      - label: |
          % if person_answering == "tenant":
          My landlord went into my home without permission
          % else:
          The landlord went into the tenant's home without permission
          % endif
        value: entered_without_permission
      - label: |
          % if person_answering == "tenant":
          My landlord went into my home without giving me enough notice
          % else:
          The landlord went into the tenant's home without giving them enough notice
          % endif
        value: insufficient_notice
      - label: |
          % if person_answering == "tenant":
          My landlord made me pay for utilities but we did not have a written agreement
          % else:
          The landlord made the tenant pay for utilities but they did not have a written agreement
          % endif
        value: utilities_no_agreement
      - label: |
          % if person_answering == "tenant":
          My utilities were shutoff
          % else:
          The tenant's utilities were shutoff
          % endif
        value: utility_shutoff
      - label: |
          % if person_answering == "tenant":
          I need help with something else
          % else:
          The tenant needs help with something else
          % endif
        value: other_landlord_tenant
      - label: |
          % if person_answering == "tenant":
          My landlord is ignoring a court order
          % else:
          The tenant's landlord is ignoring a court order
          % endif
        value: file_contempt_complaint
    minlength: 1
    validation messages:
      minlength: |
        You need to choose at least one problem to continue.

---
id: confirm notice
question: |
  % if person_answering == "tenant":
  Before you take your landlord to court
  % else:
  Before the tenant takes their landlord to court
  % endif
fields:
  - label: | 
      % if person_answering == "tenant":
      Do you have an active eviction case in court?
      % else:
      Does the tenant have an active eviction case in court?
      % endif
    field: initial_screen_tenant_facing_eviction
    input type: radio
    choices:
      - label: There is no eviction case.
        value: no case
      - label: |
          % if person_answering == "tenant":
          I got a "Notice to Quit" or a "Notice to Terminate Tenancy", but nothing more.
          % else:
          The tenant got a "Notice to Quit" or a "Notice to Terminate Tenancy", but nothing more.
          % endif
        value: notice only
      - label: |
          % if person_answering == "tenant":
          I got a "Summons and Complaint" from my landlord and I have a court date coming up.
          % else:
          The tenant got a "Summons and Complaint" from their landlord and they have a court date coming up.
          % endif
        value: pending
      - label: |
          % if person_answering == "tenant":
          I am in an eviction court case now.
          % else:
          The tenant is in an eviction court case now.
          % endif
        value: has case
      - label: |
          % if person_answering == "tenant":
          My eviction case is already over.
          % else:
          The tenant's eviction case is already over.
          % endif
        value: closed
  - note: |
     % if person_answering == "tenant":
     **Respond with your Answer to the eviction.** Use [MADE](https://gbls.org/MADE) to help you build your Answer. Do not start a new court case with UpToCode.
     % else:
     **Respond with the tenant's Answer to the eviction.** Use [MADE](https://gbls.org/MADE) to help the tenant build their Answer. Do not start a new court case with UpToCode.
     % endif
  - label: |
      % if person_answering == "tenant":
      Does your landlord already know about the problems in your home?
      % else:
      Does the tenant's landlord already know about the problems in the tenant's home?
      % endif
    field: tenant_sent_ll_notice
    datatype: yesnoradio
    show if:
      code: |
        kind_of_lawsuit.any_true("get_emergency_repairs", "past_repair_needs")
  - label: |
      % if person_answering == "tenant":
      Did you report any problems to your town or city inspector?
      % else:
      Did the tenant report any problems to their town or city inspector?
      % endif
    field: tenant_called_inspector
    datatype: yesnoradio
    show if:
      code: |
        kind_of_lawsuit.any_true("get_emergency_repairs", "past_repair_needs")
---
id: eviction warning
question: |
  If you are being evicted
subquestion: |
  Make sure you respond to the eviction in court.

  In some cases, you can sue your landlord for the same problems as part of the eviction.
  The problems can also be a "defense" that stops your eviction.

  ${ collapse_template(when_does_8a_apply) }
  
  Most tenants should use [MADE](https://gbls.org/MADE) to stop their eviction
  before they start a new case against their landlord.
  
  ${ action_button_html("https://gbls.org/MADE", size="md", label="Use MADE to stop my eviction", color="primary", icon="arrow-up-right-from-square") }
continue button label: |
  Continue anyway
continue button field: warn_eviction
---
template: when_does_8a_apply
subject: |
  When can a problem stop my eviction?
content: |
  If your landlord owes you at least $1 because of a repair they did not make or they broke another landlord-tenant law.[239 &sect; 8A](https://www.masslegalhelp.org/housing-apartments-shelter/eviction/legal-defenses-and-counterclaims) gives you the right to "buy back" your home.
  
  239 &sect; 8A may protect you if you are being evicted only because:

  * You owe rent. Or
  * Your landlord wants you to move out, but not because of anything you did wrong.

  You do not have this right if your landlord is evicting you because of a "fault" reason, like breaking any other rule in your lease. 

  You can use your "buy back" right to stop an eviction if you raise it in your eviction case. 
  
  Use [MADE](https://gbls.org/MADE) to claim this right in your eviction answer. UpToCode does not help with writing an answer.
---
id: warn against suing
question: |
  % if person_answering == "tenant":
  You may want to wait to take your landlord to court
  % else:
  The tenant may want to wait to take their landlord to court
  % endif
subquestion: |
  % if person_answering == "tenant":
  Before you take your landlord to court, you should make sure that they know about the problem.

  Even if you did not tell your landlord about the problem, there may be another way
  that they know. For example:

  - If the problem is in a public part of your building, or
  - The problem existed before you moved in, or
  - Your landlord came to your apartment for another reason and had a chance to see the problem. 
  
  % else:
  Before the tenant takes their landlord to court, they should make sure that their landlord knows about the problem.

  Even if they did not tell their landlord about the problem, there may be another way
  that the landlord knows. For example:

  - If the problem is in a public part of the tenant's building, or
  - The problem existed before the tenant moved in, or
  - The tenant's landlord came to their apartment for another reason and had a chance to see the problem.  
  % endif
fields:
  - label: |
      % if person_answering == "tenant":
      What do you want to do?
      % else:
      What does the tenant want to do?
      % endif
    field: confirm_suing_choice
    datatype: radio
    choices:
      - label: |
          % if person_answering == "tenant":
          Take my landlord to court now
          % else:
          Take their landlord to court now
          % endif
        value: sue_now
      - label: |
          % if person_answering == "tenant":
          Give my landlord notice first
          % else:
          Give their landlord notice first
          % endif
        value: give_notice_first
---
id: add inspection letter to suit
question: |
  Calling an inspector
subquestion: |
  % if person_answering == "tenant":
  It is usually a good idea to call a housing inspector if you sue your
  landlord. The court will pay attention to the problems the inspector
  finds. The report the inspector writes may be evidence in your case.

  You do not have to call an inspector before you use UpToCode. But you may want to
  get an inspection report before you file your papers at court.

  If it is an emergency you do not have to wait for an inspection report.
  
  % else:
  It is usually a good idea to call a housing inspector if a tenant sues their
  landlord. The court will pay attention to the problems the inspector
  finds. The report the inspector writes may be evidence in the tenant's case.

  A tenant does not have to call an inspector before they use UpToCode. But they may want to
  get an inspection report before they file their papers at court.

  If it is an emergency they do not have to wait for an inspection report.
  % endif
fields:
  - label: |
      % if person_answering == "tenant":
      Do you want to include a letter to your city or town inspector?
      % else:
      Does the tenant want to include a letter to their city or town inspector?
      % endif
    field: add_inspection_letter
    datatype: yesnoradio
---
features:
  navigation back button: False
  css:
    - docassemble.ALToolbox:collapse_template.css
    - styles.css
  javascript:
    - favicon.js
    - back_button.js
  #navigation: horizontal    
  small screen navigation: dropdown
  progress bar: False
---
objects:
  - dataloader: DataLoader.using(filename="housing_code_checklist.xlsx")
  - inspector_loader: InspectorLoader.using(filename="housing_inspectors.xlsx")
  - bad_conditions: ConditionsDict.using(there_are_any=True)
---
depends on:
  - bad_conditions[i].claims
code: |
  bad_conditions[i].claims
  bad_conditions[i].df
  for condition in bad_conditions[i].claims.true_values().difference(bad_conditions.get("common problems",DAEmpty()).claims.true_values()):
    bad_conditions[i].details[condition].condition_existed_at_start
  bad_conditions[i].complete = True
---
code: |  
  bad_conditions[i].details[j].condition_existed_at_start
  bad_conditions[i].details[j].complete = True
---
#features:
#  question back button: False
---
template: what_problems_can_be_solved
subject: |-
  What can I do?
content: |-
  You can choose what to do. We can help you:

  * Let your landlord know about the problem.
  * Call a housing inspector.
  * Ask a judge to order your landlord to fix the problems.
  * Sue your landlord in court.
  
  ${ action_button_html(url_action('learn_more'), label="Read more first") }  
---
id: intro affirmation
question: |
  % if person_answering == "tenant":
  ${ users.familiar() }, you can do this!
  % else:
  Let's start helping ${ users.familiar() }!
  % endif
subquestion: |
  % if initial_action_selection in ["document_by_room", "give_notice"] or (initial_action_selection == "help_in_court" and kind_of_lawsuit.any_true("get_emergency_repairs", "past_repair_needs")):
  % if person_answering == "tenant":
  Start with the repairs your home needs.
  % else:
  Start with the repairs ${ users.familiar() }'s home needs. 
  % endif
  % endif
  <div class="alert alert-secondary h-100 mh-100" role="alert">
    <h2 class="h4 alert-heading"><i class="fa-solid fa-circle-info"></i> Did you know?</h2>
    <p class="h-100 overflow-visible mb-0">
    % if person_answering == "tenant":
    "Retaliation" is illegal.
    If you complain about problems in your home and your landlord tries to get back at you, they are breaking the law. It is against the law to 
    <ul>
    <li>evict you, <strong>or</strong></li>
    <li>raise your rent, </li> 
    </ul>
     because you complained.
    </p>
    % else:
    "Retaliation" is illegal. 
    If the tenant complains about problems in their home and their landlord tries to get back at them, the landlord is breaking the law. It is against the law to 
    <ul>
    <li>evict a tenant, <strong>or</strong></li>
    <li>raise their rent, </li> 
    </ul>
     because they complained.     
    </p>
    % endif
    Read more about illegal <a class="alert-link" href="https://www.masslegalhelp.org/housing-apartments-shelter/eviction/when-eviction-illegal" target="_blank" rel="noopener noreferrer">eviction</a> and <a class="alert-link" href="https://www.masslegalhelp.org/housing-apartments-shelter/rent/illegal-retaliatory-rent-increases" target="_blank" rel="noopener noreferrer">rent increases</a> on MassLegalHelp.
    </p>
  </div>
continue button field: intro_terms_of_use  
continue button label: Get started
---
id: track conditions intro
question: |
  List your housing problems
subquestion: |
  UpToCode will help you make your list.
continue button field: track_conditions_intro  
---
id: learn more
question: |
  Solve your housing problems
subquestion: | 
  ${ collapse_template(how_to_defend_eviction_template) }
  ${ collapse_template(how_to_document_template) }
  ${ collapse_template(how_to_notify_landlord_template) }
  ${ collapse_template(get_inspection_template) }
  ${ collapse_template(sue_your_landlord_template) } 
continue button field: learn_more
---
id: simple conditions
undefine:
  - bad_conditions["common problems"].df
  - bad_conditions["common problems"].complete
question: |
  % if person_answering == "tenant":
  Does your home have any of these problems?
  % else:
  Does the tenant's home have any of these problems?
  % endif
subquestion: |
  This is a list of common problems tenants have. Tap the <svg class="svg-inline--fa fa-circle-question" aria-hidden="true" focusable="false" data-prefix="fas" data-icon="circle-question" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" data-fa-i2svg=""><path fill="#c7e6b0" d="M256 512c141.4 0 256-114.6 256-256S397.4 0 256 0S0 114.6 0 256S114.6 512 256 512zM169.8 165.3c7.9-22.3 29.1-37.3 52.8-37.3h58.3c34.9 0 63.1 28.3 63.1 63.1c0 22.6-12.1 43.5-31.7 54.8L280 264.4c-.2 13-10.9 23.6-24 23.6c-13.3 0-24-10.7-24-24V250.5c0-8.6 4.6-16.5 12.1-20.8l44.3-25.4c4.7-2.7 7.6-7.7 7.6-13.1c0-8.4-6.8-15.1-15.1-15.1H222.6c-3.4 0-6.4 2.1-7.5 5.3l-.4 1.2c-4.4 12.5-18.2 19-30.6 14.6s-19-18.2-14.6-30.6l.4-1.2zM288 352c0 17.7-14.3 32-32 32s-32-14.3-32-32s14.3-32 32-32s32 14.3 32 32z"></path></svg> 
  question mark icon to get more information about each
  problem.

  ${ collapse_template(how_far_back_should_i_go_template) }
fields:
  - label: |
      % if person_answering == "tenant":
      What repairs does your home need?
      % else:
      What repairs does the tenant's home need?
      % endif
    field: bad_conditions["common problems"].claims
    datatype: checkboxes
    code: |
      conditions_from_list(dataloader, simple_conditions_list, language=user_language)
  - note: |
      % if person_answering == "tenant":
      <h2 class="h4">Did you have any of these other problems?<h2>
      % else:
      <h2 class="h4">Did the tenant have any of these other problems?<h2>
      % endif
    show if:
      code: |
        initial_action_selection != "help_in_court"
  - Choose any that apply: kind_of_lawsuit
    datatype: checkboxes
    choices:
      - ${kind_of_lawsuit_text["illegal_lockout"]}: illegal_lockout     
      - ${kind_of_lawsuit_text["entered_without_permission"]}: entered_without_permission
      - ${kind_of_lawsuit_text["insufficient_notice"]}: insufficient_notice
      - ${kind_of_lawsuit_text["utilities_no_agreement"]}: utilities_no_agreement
      - ${kind_of_lawsuit_text["utility_shutoff"]}: utility_shutoff
      - ${kind_of_lawsuit_text["file_contempt_complaint"]}: file_contempt_complaint
    show if:
      code: |
        initial_action_selection != "help_in_court"
  - note: |
      % if person_answering == "tenant":
      If the problem you need help with is not on this list, go to the next screen to see more.
      % else:
      If the problem the tenant needs help with is not on this list, go to the next screen to see more.
      % endif     
---
variable name: kind_of_lawsuit_text
use objects: True
data:
  utilities_no_agreement:
    question: |
      % if person_answering == "tenant":
      My landlord made me pay for utilities, but we did not have a written agreement
      % else:
      The tenant's landlord made the tenant pay for utilities, but they did not have a written agreement
      % endif
    document: |
      % if person_answering == "tenant":
      My landlord made me pay for utilities, but we did not have a written agreement
      % else:
      The tenant's landlord made the tenant pay for utilities, but they did not have a written agreement
      % endif
  illegal_lockout:
    question: |
       % if person_answering == "tenant":
       My landlord changed my locks, moved my things or threatened to do so 
       % else:
       The tenant's landlord changed their locks, moved their things or threatened to do so
       % endif
    document: |
       % if person_answering == "tenant":
       My landlord changed my locks, moved my things or threatened to do so  
       % else:
       The tenant's landlord changed their locks, moved their things or threatened to do so
       % endif
       
  entered_without_permission:
    question: |
       % if person_answering == "tenant":
       My landlord went into my home without my permission
       % else:
       The tenant's landlord went into the tenant's home without permission
       % endif
    document: |
       % if person_answering == "tenant":
       My landlord went into my home without my permission
       % else:
       The tenant's landlord went into the tenant's home without permission
       % endif
       
  insufficient_notice:
    question: |
       % if person_answering == "tenant":
       My landlord went into my home without giving me enough notice
       % else:
       The tenant's landlord went into the tenant's home without giving them enough notice
       % endif
    document: |
       % if person_answering == "tenant":
       My landlord went into my home without giving me enough notice
       % else:
       The tenant's landlord went into the tenant's home without giving them enough notice
       % endif
   
  utility_shutoff:   
    question: |
       % if person_answering == "tenant":
       My utilities were shutoff 
       % else:
       The tenant's utilities were shutoff
       % endif
    document: |
       % if person_answering == "tenant":
       My utilities were shutoff 
       % else:
       The tenant's utilities were shutoff
       % endif
       
  file_contempt_complaint:
    question: |
       % if person_answering == "tenant":
       My landlord is ignoring a court order
       % else:
       The landlord is ignoring a court order
       % endif
    document: |
       % if person_answering == "tenant":
       My landlord is ignoring a court order
       % else:
       The landlord is ignoring a court order
       % endif     
---
template: how_far_back_should_i_go_template
subject: |
  % if person_answering == "tenant":
  What problems should I list?
  % else:
  What problems should the tenant list?
  % endif
content: |
  % if person_answering == "tenant":
  You can list any problems in this apartment that:
  
  1. still need to be fixed and 
  2. you have had over the last 6 years (since ${ today().minus(years=6) }), even
  if they are fixed now.
  % else:
  The tenant can list any problems in the apartment that:
  
  1. still need to be fixed and 
  2. they have had over the last 6 years (since ${ today().minus(years=6) }), even
  if they are fixed now.
  % endif
---
id: review simple conditions
question: |
  % if person_answering == "tenant":
  Do you want to add more problems to your list?
  % else:
  Does the tenant want to add more problems to their list?
  % endif
subquestion: |
  % if person_answering == "tenant":
  **You told us about these problems:**
  % else:
  **You told us the tenant had these problems:**
  % endif
  
  % for basis in kind_of_lawsuit.true_values():
  % if basis == "get_emergency_repairs":
  * Get repairs
  % elif basis == "past_repair_needs":
    % if person_answering == "tenant":
    * Get paid because of repairs I needed in the last 6 years
    % else: 
    * Get paid because of repairs the tenant needed in the last 6 years
    % endif
    
  % elif basis == "illegal_lockout":
    % if person_answering == "tenant":
    * Landlord illegally locked me out of the apartment or moved my belongings out, or threatened to do so
    % else:
    * Landlord illegally locked the tenant out of the apartment or moved the tenant's belongings out, or threatened to do so
    % endif
    
  % elif basis == "entered_without_permission":
    % if person_answering == "tenant":
    * Landlord entered my home without permission
    % else:
    * Landlord entered the tenant's home without permission
    % endif
    
  % elif basis == "insufficient_notice":
  * Landlord entered without notice
  % elif basis == "utilities_no_agreement":
    % if person_answering == "tenant":
  * Landlord made me pay for utilities without a written agreement
    % else:
  * Landlord made the tenant pay for utilities without a written agreement
    % endif
    
  % elif basis == "utility_shutoff":
    % if person_answering == "tenant":
  * My utilities were shutoff
    % else: 
  * The tenant's utilities were shutoff
    % endif
    
  % elif basis == "other_landlord_tenant":
  * Other
  % elif basis == "file_contempt_complaint":
    % if person_answering == "tenant":
    
  * My landlord is ignoring a court order
    % else:
  * The tenant's landlord is ignoring a court order
    % endif
    
  % endif
  % endfor
  % for category in bad_conditions.elements:  
  % for index, row in bad_conditions[category].df.iterrows():
  * [:pencil-alt: ${ row['Interview description'] }](${ url_action(f'bad_conditions["{str(category)}"].details["{str(index)}"].condition_existed_at_start')})
  % endfor
  % endfor

  ${ collapse_template(how_many_problems_are_there_template)}

fields:
  - Add more problems?: wants_detailed_conditions
    datatype: radio
    choices:
      - label: |
          % if person_answering == "tenant":
          Yes, see more problems I may have in each room.
          % else:
          Yes, see more problems the tenant may have in each room.
          % endif
        value: True
      - No, go straight to a solution.: False
---
template: how_many_problems_are_there_template
subject: |
  % if person_answering == "tenant":
  How many problems can you help me with?
  % else:
  How many problems can you help the tenant with?
  % endif
content: |
  % if person_answering == "tenant":
  You can pick from a list of about
  150 problems organized by room and category. Some problems you may not know your
  landlord must fix.
  % else:
  The tenant can pick from a 
  list of about 150 problems organized by room and category. Some problems the tenant may
  not know their landlord must fix.
  % endif

  The list of problems comes from the State Sanitary Code. We put the Code into sentences
  with short explanations so it is easier to understand.
---  
# WARNING: This page id needs to stay the same or the selectors for
# the button styles in styles.css will need to be updated to match
id: room chooser
question: |
  Look at problems by room and category
subquestion: |
  % if len(bad_conditions) > 1 and person_answering == "tenant":
  You already listed problems in these rooms and categories:
  
  % for button in bad_conditions:
  * [:pencil-alt: ${ str(button).capitalize() }](${ url_action('bad_conditions["' + button + '"].claims') } )
  % endfor
  % endif
  
  
  Pick a room or category to add another problem.
  
field: bad_conditions.new_item_name
buttons:
  code: |
    [button for button in available_buttons if next(iter(button)) not in bad_conditions ]
back button label: |
  Back
under: |
  Keep looking at problems by room and category, or skip ahead
  to start working on a solution.
  
  % if len(bad_conditions.elements):
  ${ action_button_html(url_ask('set_gathered'), label="Skip and continue", color="primary", size="md") }
  % endif
---
code: |
  bad_conditions.gathered = True
  set_gathered = True
---
depends on:
  - user_language
language: en
variable name: available_buttons
data:
  - emergency: Emergency
    image: first-aid
  - Living area: Living area  
    image: couch
  - Bathroom: Bathroom
    image: bath
  - Kitchen: Kitchen
    image: utensils        
  - Bedroom: Bedroom    
    image: bed    
  - Basement/Cellar: Basement/Cellar
    image: stairs
  - Porch and balcony: Porch and balcony
    image: store    
  - Exits: Exits
    image: door-open
  - Lead paint: Lead Paint
    image: paint-roller    
  - Safety: Safety
    image: unlock-alt        
  - Heat: Heating
    image: thermometer-full
  - Lighting: Lighting
    image: lightbulb    
  - Electricity and Gas: Electricity and Gas
    image: plug
  - Water: Water
    image: faucet    
  - Garbage: Garbage
    image: trash-alt
  - Rodents and insects: Rodents and insects
    image: bug
  - Building Structure: Building Structure
    image: hard-hat        
  - General Maintenance: General maintenance
    image: tools
---
if: |
  i == 'emergency'
undefine:
  - bad_conditions[i].df  
  - bad_conditions[i].complete
id: Claims
question: |
  Emergency problems
subquestion: |
  Your landlord should start to fix these problems within 24 hours from the time they 
  learn about the problem.
  
  If you do not see the problem you are looking for, try a different room or category.

  ${ collapse_template(emergency_sanitary_code_template) }
fields:
  - no label: bad_conditions[i].claims
    datatype: checkboxes
    required: False
    code: |
      conditions_with_help(dataloader, "24 hours", search_column="Deadline", language=user_language)
    default:
      code: |
        bad_conditions[i].claims.true_values() if defined('bad_conditions[i].claims') else [] + bad_conditions["common problems"].claims.true_values()
---
template: emergency_sanitary_code_template
subject: |
  Related Sanitary Code
content: |
  These problems are listed in the following sections of the
  [Sanitary Code](https://www.mass.gov/doc/105-cmr-410-minimum-standards-of-fitness-for-human-habitation-state-sanitary-code-chapter-ii/download):
      
  Problem | Sanitary Code
  --------|------------------
  % for row in dataloader.get_rows(allowed_types=["24 hours"], filter_column="Deadline").iterrows():
  ${ row[1]['Interview description'] } | ${ row[1]['Sanitary Code Section'] if row[1]['Sanitary Code Section'] else ""}
  % endfor
---
if:
  i != 'emergency'
undefine:
  - bad_conditions[i].df
  - bad_conditions[i].complete  
id: Non-emergency claims
question: |
  Problems with **${ i }**
subquestion: |
  You can list any problems that you had in the last 6 years at this apartment,
  even if they are fixed now.  

  ${ collapse_template(sanitary_code_explanation_template) }
fields:
  - no label: bad_conditions[i].claims
    datatype: checkboxes
    required: False
    code: |
      conditions_with_help(dataloader, i, language=user_language)
    default:
      code: |
        bad_conditions[i].claims.true_values() if defined('bad_conditions[i].claims') else []  + bad_conditions["common problems"].claims.true_values()
---
template: sanitary_code_explanation_template
subject: |
  Related Sanitary Code
content: |
  The problems listed below are cited in the following sections of the
  [Sanitary Code](https://www.mass.gov/doc/105-cmr-410-minimum-standards-of-fitness-for-human-habitation-state-sanitary-code-chapter-ii/download):
      
  Problem | Sanitary Code
  --------|------------------
  % for row in dataloader.get_rows(allowed_types=[i], filter_column="Category").iterrows():
  ${ row[1]['Interview description'] } | ${ row[1]['Sanitary Code Section'] or "" }
  % endfor
---
id: there is another condition
question: |
  Do you want to list problems in another room or category?
subquestion: |
  So far you have reviewed problems in:
  
  % for button in bad_conditions:
  * [:pencil-alt: ${ str(button).capitalize() }](${ url_action('bad_conditions["' + button + '"].claims') } )
  % endfor
  
  Select "yes" if you want to look at problems in another room or category.
  
  Select "no" if you want to skip other rooms and categories and continue to a solution.
yesno: bad_conditions.there_is_another
---
code: |
  # available buttons doesn't include the "short" list
  if len(bad_conditions.complete_elements()) >= len(available_buttons) + 1: 
    bad_conditions.there_is_another = False
---
code: |
  if wants_detailed_conditions and len(bad_conditions.complete_elements()) == 1:
    bad_conditions.there_is_another = True
---
depends on:
  - bad_conditions[i].claims
code: |
  if i != "common problems":
    overlapping_conditions = bad_conditions.get("common problems",DAEmpty()).claims.true_values()
  else:
    overlapping_conditions = []
  bad_conditions[i].df = dataloader.load_rows(bad_conditions[i].claims.true_values().difference(overlapping_conditions))
---
continue button field: review_conditions
id: review conditions
question: |
  Here is what you told us so far
subquestion: |  
  % if initial_action_selection == "help_in_court" and person_answering == "tenant":
  You need to sue your landlord because:
  % elif initial_action_selection == "help_in_court":
  The tenant needs to sue their landlord because:

  % for basis in kind_of_lawsuit.true_values():
  % if basis == "get_emergency_repairs":
  * Get repairs
  % elif basis == "past_repair_needs" and person_answering == "tenant":
  * Get paid because of repairs I needed in the last 6 years
  % elif basis == "past_repair_needs" and person_answering == "attorney" or person_answering == "tenant_helper":
  * Get paid because of repairs the tenant needed in the last 6 years
  % elif basis == "illegal_lockout" and person_answering == "tenant":
  * Landlord illegally locked me out of the apartment or moved my belongings out, or threatened to do so
  % elif basis == "illegal_lockout" and person_answering == "attorney" or person_answering == "tenant_helper":
  * Landlord illegally locked the tenant out of the apartment or moved their belongings out, or threatened to do so
  % elif basis == "entered_without_permission" and person_answering == "tenant":
  * Landlord entered my home without permission
  % elif basis == "entered_without_permission" and person_answering == "attorney" or person_answering == "tenant_helper":
  * Landlord entered the tenant's home without permission
  % elif basis == "insufficient_notice":
  * Landlord entered without notice
  % elif basis == "utilities_no_agreement" and person_answering == "tenant":
  * Landlord made me pay for utilities without a written agreement
  % elif basis == "utilities_no_agreement" and person_answering == "attorney" or person_answering == "tenant_helper":
  * Landlord made the tenant pay for utilities without a written agreement
  % elif basis == "utility_shutoff" and person_answering == "tenant":
  * My utilities were shutoff
  % elif basis == "utility_shutoff" and person_answering == "attorney" or person_answering == "tenant_helper":
  * The tenant's utilities were shutoff
  % elif basis == "other_landlord_tenant":
  * Other
  % elif basis == "file_contempt_complaint" and person_answering == "tenant":
  * My landlord is ignoring a court order
  % elif basis == "file_contempt_complaint" and person_answering == "attorney" or person_answering == "tenant_helper":
  * The tenant's landlord is ignoring a court order
  % endif
  % endfor

  [:pencil: Change answers](${ url_action('kind_of_lawsuit') })
  % endif
  % if initial_action_selection != "help_in_court" or kind_of_lawsuit.any_true("get_emergency_repairs", "past_repair_needs"):
  % if person_answering == "tenant":
  <h2 class="h4"> Problems in your home</h2>
  % else: 
  <h2 class="h4"> Problems in the tenant'shome</h2>
  % endif
  ${ review_conditions_template }
  % endif
---
template: review_conditions_template
content: |
  % if len(bad_conditions.elements): 
  Select a room or category below to revisit your choices.
  Select a problem to edit the time the problem started, upload evidence,
  and make other changes.
  
  % for category in bad_conditions.elements:
  #### [:pencil-alt: ${ category.title() if not category is None else 'None' }](${ url_action('bad_conditions["' + str(category) + '"].claims') })
  
  % for index, row in bad_conditions[category].df.iterrows():
  * [:pencil-alt: ${ row['Interview description'] }](${ url_action(f'bad_conditions["{str(category)}"].details["{str(index)}"].condition_existed_at_start')})
  % endfor
  % endfor
  % endif
  
  % if len(bad_conditions) < len(available_buttons):
  ${ bad_conditions.add_action() }
  % endif
  
  If you are done selecting, listing, and editing problems by room and 
  category, continue to start working on a solution.
---
event: warn_add_conditions
question: |
  You haven't added any problems yet
subquestion: |
  You should add at least one problem to continue.
  % if len(bad_conditions): 
  
  Select a room or category below to revisit your selections.  
  % endif  
  % for category in bad_conditions:
  #### [${ category.title() if not category is None else 'None' }](${ url_action('bad_conditions["' + str(category) + '"].claims') })
  
  % for index, row in bad_conditions[category].df.iterrows():
  * ${ row['Interview description'] }
  % endfor
  % endfor  
  
  % if len(bad_conditions) < len(available_buttons):
  ${ bad_conditions.add_action() }
  % endif
---
continue button field: main_triage_screen
id: triage
question: |
  % if person_answering == "tenant":
  Deciding on your next steps
  % else: 
  Deciding on the tenant's next steps
  % endif
fields:
  - label: |
      % if person_answering == "tenant":
      Do you have an active eviction case in court?
      % else:
      Does the tenant have an active eviction case in court?
      % endif
    field: screen_tenant_facing_eviction
    input type: radio
    choices:
      - There is no eviction case.: no case
      - label: |
          % if person_answering == "tenant":
          I got a "Notice to Quit" or a "Notice to Terminate Tenancy", but nothing more.
          % else:
          The tenant got a "Notice to Quit" or a "Notice to Terminate Tenancy", but nothing more.
          % endif
        value: notice only
      - label: |
          % if person_answering == "tenant":
          I got a "Summons and Complaint" from my landlord and I have a court date coming up.
          % else:
          The tenant got a "Summons and Complaint" from their landlord and they have a court date coming up.
          % endif
        value: pending
      - label: |
          % if person_answering == "tenant":
          I have a case that is already in court.
          % else:
          The tenant has a case that is already in court.
          % endif
        value: has case
      - The eviction case is finished.: closed
  - note: |
      % if person_answering == "tenant":
      **Make sure you respond to the eviction.** You can use [MADE](https://gbls.org/MADE) to stop the eviction case. Do not use UpToCode to start a new court case while you have an active eviction.
      % else:
      **Make sure the tenant responds to the eviction. **They can use [MADE](https://gbls.org/MADE) to stop the eviction case. The tenant should not use UpToCode to start a new court case while they have an active eviction.
      % endif
    js show if:
      val("screen_tenant_facing_eviction") == 'has case' || val("screen_tenant_facing_eviction") =='pending'
  - label: |
      % if person_answering == "tenant":
      Does your landlord know about the problems in your home?   
      % else:
      Does the landlord know about the problems in the tenant's home?
      % endif
    field: screen_ll_knows_problem
    datatype: yesnoradio
  - note: |
      % if person_answering == "tenant":
      **Okay.** First, tell your landlord about the problem. We can help you write a letter to your landlord that gives them 'legal notice'.
      % else: 
      **Okay.** First, the tenant should tell their landlord about the problem. We can help write a letter to their landlord that gives their landlord 'legal notice'.
      % endif
    show if:
      variable: screen_ll_knows_problem
      is: False 
  - label: |
      % if person_answering == "tenant":
      Is your landlord already fixing all the problems?
      % else:
      Is the tenant's landlord already fixing all the problems?
      % endif
    field: screen_ll_already_fixing 
    datatype: yesnoradio
    show if: screen_ll_knows_problem
  - note: |
      % if person_answering == "tenant":
      **You may want to give your landlord some time.** Your landlord must fix some serious problems in 24 hours. Other problems are not so urgent and your landlord may have up to 30 days to fix them.

      If you have not given your landlord enough time to fix the problem, you may want to wait before you ask the court for help. But it is up to you.
      % else:
      **The tenant may want to give their landlord some time.** The landlord must fix some serious problems in 24 hours. Other problems are not so urgent and your landlord may have up to 30 days to fix them.

      If the tenant has not given their landlord enough time to fix the problem,
      the tenant may want to wait before they ask the court for help. But it is up
      to the tenant.
      % endif
    show if: screen_ll_already_fixing

  - label: |
      % if person_answering == "tenant":
      Do other tenants in your building have housing problems also?
      % else:
      Do other tenants in the tenant's building have housing problems also?
      % endif
    field: screen_other_tenants_with_problem
    datatype: yesnomaybe
    show if: screen_ll_knows_problem
  - note: |
      % if person_answering == "tenant":
      **${ users.familiar() }, you and your neighbors are stronger together**. You have the right to **organize** with other tenants and get your landlord to fix these problems.
      % else:
      **The tenant, and their neighbors are stronger together**. They have the right to **organize** with other tenants and get their landlord to fix these problems.
      % endif
    js show if: |
      val('screen_other_tenants_with_problem') === true || val('screen_other_tenants_with_problem') === 'None'

  - label: |
        % if person_answering == "tenant":
        Did you report any problems to your town or city housing inspector? 
        % else:
        Did the tenant report any problems to their town or city housing inspector?
        % endif
    field: screen_contacted_housing_inspector
    datatype: yesnoradio
    show if: screen_ll_knows_problem
  - note: |
      % if person_answering == "tenant":
      **You may want to get an inspection.** You do not have to get a
      housing inspection. But it can help a judge understand the problems
      better. You do not need to wait for the inspection to ask for more help.
      % else:
      **The tenant may want to get an inspection.** The tenant does not have to get a
      housing inspection. But it can help a judge understand the problems
      better. The tenant does not need to wait for the inspection to ask for more help.
      % endif
    show if:
      variable: screen_contacted_housing_inspector
      is: False
  - label: |
        % if person_answering == "tenant":
        Did a judge already order your landlord to do something in your case?
        % else: 
        Did a judge already order the tenant's landlord to do something in the case?
        % endif
    field: has_tro
    datatype: yesnoradio
    show if: screen_ll_knows_problem
  - note: |
      % if person_answering == "tenant":
      **You may want more help from the court if your landlord is ignoring a court order.** You can file a Complaint for Contempt.
      % else:
      **The tenant may want more help from the court if their landlord is ignoring a court order.** They can file a Complaint for Contempt.
      % endif
    show if: has_tro
  - note: |
      % if person_answering == "tenant":
      **What do you want to do?**
      Remember, you have the right to be protected from {retaliation}. 
      % else:
      **What does the tenant want to do?**    
      Remember, the tenant has the right to be protected from {retaliation}.
      % endif
    show if: screen_ll_knows_problem
        
  - no label: document_choice
    required: False
    datatype: checkboxes
    js show if: |
      val("screen_ll_knows_problem") && !val("has_tro")
    choices:
      - label: |
          % if person_answering == "tenant":
          Save or print a copy of my checklist for later.
          % else:
          Save or print a copy of the tenant's checklist for later.
          % endif
        value: get_report
      - label: |
          % if person_answering == "tenant":
          Tell my landlord about the problems.
          % else:
          Tell the tenant's landlord about the problems.
          % endif
        value: tell_landlord
      - label: |
          % if person_answering == "tenant":
          Organize with my neighbors or other tenants in my city.
          % else:
          Organize with the tenant's neighbors or other tenants in their city.
          % endif
        value: organize_tenants
      - Get a city inspection: get_inspection
      - Ask for a fair settlement. Use a consumer protection demand letter or a settlement letter.: demand_letter_93a
        help: |
          % if person_answering == "tenant":
          A **demand letter** is a special letter that counts as a legal request for money. This is sometimes called a 93A demand letter, a 30-day demand letter, or a request for settlement.
          <br>
          <br>
          You need to send the demand letter at least **30 days** before you file any papers with the court. You should also send it by certified mail so that you have a record of it being recieved your landlord.
          % else:
          A **demand letter** is a special letter that counts as a legal request for money. This is sometimes called a 93A demand letter, a 30-day demand letter, or a request for settlement. 
          <br>
          <br>
          The tenant needs to send the demand letter at least **30 days** before they file any papers with the court. A tenant should also send it by certified mail so that they have a record of it being recieved by their landlord.
          % endif
      - label: |
          % if person_answering == "tenant":
          Ask the court to order my landlord to fix a problem or sue my landlord for money.
          % else:
          Ask the court to order the tenant's landlord to fix a problem or sue the tenant's landlord for money.
          % endif
        value: sue_landlord
    none of the above: False
    default:
      code: |
        ["get_report"] if kind_of_lawsuit.all_false() else ["get_report", "sue_landlord"]
  
  - no label: document_choice
    required: False
    datatype: checkboxes
    js show if: |
      val("screen_ll_knows_problem") && val("has_tro")
    choices:
      - label: |
          % if person_answering == "tenant":
          Save or print a copy of my checklist for later.
          % else:
          Save or print a copy of the tenant's checklist for later.
          % endif
        value: get_report
      - label: |
          % if person_answering == "tenant":
          Tell my landlord about the problems.
          % else:
          Tell the tenant's landlord about the problems.
          % endif
        value: tell_landlord
      - label: |
          % if person_answering == "tenant":
          Organize with my neighbors or other tenants in my city.
          % else:
          Organize with the tenant's neighbors or other tenants in their city.
          % endif
        value: organize_tenants
      - Get a city inspection.: get_inspection
      - Ask for a fair settlement, use a consumer demand letter or a settlement letter.: demand_letter_93a
      - label: |
          % if person_answering == "tenant":
          Ask the court to order my landlord to fix a problem or sue my landlord for money.
          % else:
          Ask the court to order the tenant's landlord to fix a problem or sue the tenant's landlord for money.
          % endif
        value: sue_landlord
      - label: |
          % if person_answering == "tenant":
          Tell a judge my landlord is ignoring the court order.
          % else:
          Tell a judge the tenant's landlord is ignoring the court order.
          % endif
        value: contempt_complaint
    none of the above: False
    default:
      code: |
        ["get_report", "contempt_complaint"] if kind_of_lawsuit["file_contempt_complaint"] else ["get_report"] if kind_of_lawsuit.all_false() else ["get_report", "sue_landlord"]
validation code: |
  if screen_ll_knows_problem and len(document_choice.true_values()) < 1:
    validation_error("Pick at least one.", field="document_choice")
  if screen_ll_knows_problem and "contempt_complaint" not in document_choice:
    document_choice["contempt_complaint"] = False
---
# Set a default value for all document choices
variable name: document_choice
use objects: True
data:
  get_report: False
  tell_landlord: False
  organize_tenants: False
  get_inspection: False
  demand_letter_93a: False
  sue_landlord: False
  contempt_complaint: False
  discovery: False
  fee_waiver: False
---
depends on:
  - document_choice
only sets:
  - set_document_choice_by_lawsuit_kind
code: |
  # Decide which documents we need based on this initial
  # screening question

  if kind_of_lawsuit.any_true("get_emergency_repairs", "past_repair_needs"):
    document_choice["get_report"] = True
    screen_contacted_housing_inspector = tenant_called_inspector
    if not tenant_called_inspector:
      document_choice["get_inspection"] = add_inspection_letter
    if (
        not tenant_sent_ll_notice 
        and confirm_suing_choice == "give_notice_first"
    ):
      screen_ll_knows_problem = False
      document_choice["sue_landlord"] = False
      document_choice["tell_landlord"] = True
    else:
      document_choice["sue_landlord"] = True
  elif kind_of_lawsuit["file_contempt_complaint"]: # shouldn't start a new lawsuit
    screen_contacted_housing_inspector = None
    initial_screen_tenant_facing_eviction = None
    screen_ll_knows_problem = True
    document_choice["contempt_complaint"] = True
  else:
    screen_contacted_housing_inspector = False
    document_choice["sue_landlord"] = True
    document_choice["discovery"] = True
    document_choice["fee_waiver"] = True
  set_document_choice_by_lawsuit_kind = True
---
code: |
  if initial_action_selection == "help_in_court":
    # Don't use triage screen if initial action was suing LL
    screen_ll_knows_problem = True
---
id: interview_order_request_housing_inspection
code: |
  users[0].name.first
  users[0].address.address
  users[0].mailing_address.address
  users[0].email
  try:
    users[0].address.geocode()
  except:
    pass
  inspector_information
  # display_inspector_information
  other_parties[0].name.first
  other_parties[0].address.address
  other_parties[0].email
  condemn_warning
  interview_order_request_housing_inspection = True
---
code: |
  if users[0].normalized_address().city.lower() in ['boston', 'charlestown', 'dorchester','roxbury', 'jamaica plain', 'brighton', 'allston']:
    inspector_information = inspector_loader.load_row("Boston").fillna("")
  else:
    inspector_information = inspector_loader.load_row(users[0].normalized_address().city).fillna("")
  if inspector_information.empty:
    inspector_information = DAEmpty()
---
id: display inspector information
continue button field: display_inspector_information
question: |
  In ${ users[0].normalized_address().city }, you call ${ inspector_information["Title"] } to report housing problems
subquestion: |
  You can call the inspector at ${ tel(inspector_information["Telephone"]) }.

  No need to write this information down.

  ${ collapse_template(detailed_inspector_information_template)}
---
template: detailed_inspector_information_template
subject: |
  Full contact information for my inspector
content: |
  &nbsp; | &nbsp;
  -------|---------
  % if inspector_information["Telephone"]:
  Telephone | ${ tel(inspector_information["Telephone"]) }
  % endif
  % if inspector_information["EXTENSION"]:
  Extension | ${ inspector_information["EXTENSION"] }
  % endif
  % if inspector_information["URL"]:
  Website | [${ inspector_information["URL"] }](${ inspector_information["URL"]})
  % endif
  Address | ${ inspector_information["Address Line 1"] }, ${ inspector_information["Address Line 2"] }, MA ${ inspector_information["Zip"] }
  % if inspector_information["Email"]:
  Email | [${ inspector_information["Email"]}](mailto:${ inspector_information["Email"]})
  % endif
  % if inspector_information["Special Contact"]:
  Other report method | ${ inspector_information["Special Contact"] }
  % endif
---
id: direct_inspection_email
question: |
  % if person_answering == "tenant":
  You can send your inspection request directly to Chelsea Inspectional Services
  % else:
  The tenant can send their inspection request directly to Chelsea Inspectional Services
  % endif
subquestion: |
  % if person_answering == "tenant":
  The address you gave is in the City of Chelsea. Chelsea can receive inspection requests by email.
  
  If you click yes, we will email your request to Chelsea Inspectional Services now.
  % else:
  The address the tenant provided is in the City of Chelsea. Chelsea can receive inspection requests by email.
  
  If you click yes, we will email their request to Chelsea Inspectional Services now.
  % endif
  
fields:
  - label: |
      % if person_answering == "tenant":
      Would you like to send your inspection request directly to Chelsea Inspectional Services?
      % else:
      Would you like to send the tenant's inspection request directly to Chelsea Inspectional Services?
      % endif
    field: direct_inspection_email
    datatype: yesnoradio 
---
id: direct_inspection_email_success
code: |
  if direct_inspection_email == True:
      direct_inspection_email_success = send_email(to="housingcomplaints@chelseama.gov", template=chelsea_inspection_email_template, attachments=request_housing_inspection_attachment.as_pdf())
---
template: chelsea_inspection_email_template
subject: |
  Request for inspection through UpToCode
content: |
  Hello Chelsea Inspectional Services,
  
  Attached is my request for an inspection of my rental unit.
  
  Sincerely,
  
  ${ users[0].name }
---
id: download_conditions_checklist_docs
event: download_conditions_checklist_docs
question: |
  % if person_answering == "tenant":
  Your documents are ready
  % else:
  The tenant's documents are ready
  % endif
subquestion: |
  % if person_answering == "tenant":
  1. Download and **print** your documents below. You can also send yourself
  or someone else a copy of the documents in an email.
  1. Read the instructions to learn how to file and deliver your
  documents.
    % if direct_inspection_email == True and direct_inspection_email_success:
    1. The email to Chelsea Inspectional Services was sent successfully. You do not need to send your inspection request seperately. You can wait for the inspector to reach out to you, but their contact info is also available below.
    % elif direct_inspection_email == True:
    1. The email to Chelsea Inspectional Services failed to send, follow the instructions on how to contact Chelsea Inspectional Services below.
    % endif
  % else: 
  1. Download and **print** the tenant's documents below. The tenant can also send themselves
  or someone else a copy of the documents in an email.
  1. Read the instructions to learn how to file and deliver the tenant's
  documents.
    % if direct_inspection_email == True and direct_inspection_email_success:
    1. The email to Chelsea Inspectional Services was sent successfully. The tenant does not need to send their inspection request seperately. They can wait for the inspector to reach out to them, but the inspector's contact info is also available below.
    % elif direct_inspection_email == True:
    1. The email to Chelsea Inspectional Services failed to send, follow the instructions on how to contact Chelsea Inspectional Services below.
    % endif
  % endif
  % if document_choice["sue_landlord"] or document_choice["contempt_complaint"]:
  1. Deliver the court forms to the ${ trial_court } at ${ trial_court.address.on_one_line() }. You can call the court for instructions at ${ tel(trial_court.phone_number) }.
  % endif
  % if person_answering == "tenant":
  1. You can come back to UpToCode later to take additional steps.
  % else:
  1. The tenant can come back to UpToCode later to take additional steps.
  % endif
    
  
  % if showifdef("interview_order_request_housing_inspection") and person_answering == "tenant":
    % if direct_inspection_email == False:
    <h2 class="h4">Before submitting your request to inspectional services, please seek legal help if you believe that:</h2>

    1. You live in an {illegal unit}.
    1. Your unit is {overcrowded}.
    1. Your unit is {uninhabitable}.
  
    A unit can be {condemned} in these circumstances.
  
    Find legal aid organizations in your area by answering a few questions [here](https://masslrf.org/en/triage/start/housing).
    % endif

  <h2 class="h4">To call the housing inspector for your city or town</h2>
  You can call the inspector at ${ tel(inspector_information["Telephone"]) }.
  
  Use the report below to explain why you are calling, and keep a copy with you when the 
  inspector comes to your home.

  ${ collapse_template(detailed_inspector_information_template)}  
  
  % elif showifdef("interview_order_request_housing_inspection"):
    % if direct_inspection_email == False:
    <h2 class="h4">Before submitting the tenant's request to inspectional services, please seek legal help if they believe that:</h2>
  
    1. They live in an {illegal unit}.
    1. Their unit is {overcrowded}.
    1. Their unit is {uninhabitable}.
  
    A unit can be {condemned} in these circumstances.
  
    Find legal aid organizations in the tenant's area by answering a few questions [here](https://masslrf.org/en/triage/start/housing).
    % endif
    
  <h2 class="h4">To call the housing inspector for your city or town</h2>
  You can call the inspector at ${ tel(inspector_information["Telephone"]) }.
  
  Use the report below to explain why you are calling, and keep a copy with you when the 
  inspector comes to the tenant's home.

  ${ collapse_template(detailed_inspector_information_template)}
  
  % endif

  % if screen_ll_knows_problem and len(housing_code_bundle.enabled_documents()) > 0 and person_answering == "tenant":
  <h2 class="h4">Documents for you to <strong>print</strong> and deliver or keep for your records</h2>
  ${ housing_code_bundle.download_list_html(format="docx", use_previously_cached_files=True) }
  
  % elif screen_ll_knows_problem and len(housing_code_bundle.enabled_documents()) > 0:
  <h2 class="h4">Documents for the tenant to <strong>print</strong> and deliver or keep for their records</h2>
  ${ housing_code_bundle.download_list_html(format="docx", use_previously_cached_files=True) }
  
  % elif len(tenant_repair_letter_bundle.enabled_documents()) > 0: 
  ${ tenant_repair_letter_bundle.download_list_html(format="docx", use_previously_cached_files=True) }
  
  % endif  
  % if screen_ll_knows_problem and document_choice['sue_landlord'] or document_choice["contempt_complaint"]:
  [BR]
  % if person_answering == "tenant":
  <h2 class="h4">Documents for you to <strong>print</strong> and file in court</h2>
  % else: 
  <h2 class="h4">Documents for the tenant to <strong>print</strong> and file in court</h2>
  % endif
  
  ${ affirmative_complaint_bundle.download_list_html(format="docx", use_previously_cached_files=True) }
  % endif
  
  ${ everything_for_emailing_bundle.send_button_html() }

  <br/>
  ${ only_once_review_widget() }
---
id: judge actions
question: |
  % if person_answering == "tenant":
  Did the judge already order your landlord to do something about your case?
  % else:
  Did the judge already order the tenant's landlord to do something about their case?
  % endif
fields: 
  - label: |
      % if person_answering == "tenant":
      A judge already ordered my landlord to do something
      % else:
      A judge already ordered the tenant's landlord to do something
      % endif
    field: has_tro
    datatype: yesnoradio
---
template: housing_code_bundle.send_email_template
subject: |
  ${ users.familiar() }, 
  % if len(housing_code_bundle.enabled_documents()) > 1:
  your documents from UpToCode are ready
  % else:
  your document from UpToCode is ready
  % endif
content: |
  Thank you for using UpToCode!

  We are attaching a copy of the documents that you worked on. Keep this for
  your records.

  Learn more at [uptocode.org](https://uptocode.org)
---
template: tenant_repair_letter_bundle.send_email_template
subject: |
  ${ users.familiar() }, 
  % if len(tenant_repair_letter_bundle.enabled_documents()) > 1:
  your documents from UpToCode are ready
  % else:
  your document from UpToCode is ready
  % endif
content: |
  Thank you for using UpToCode!

  We are attaching a copy of the documents that you worked on. Keep this for
  your records.

  Learn more at [uptocode.org](https://uptocode.org)
---
template: affirmative_complaint_bundle.send_email_template
subject: |
  ${ users.familiar() }, 
  % if len(tenant_repair_letter_bundle.enabled_documents()) > 1:
  your documents from UpToCode are ready
  % else:
  your document from UpToCode is ready
  % endif
content: |
  Thank you for using UpToCode!

  We are attaching a copy of the documents that you worked on. Keep this for
  your records.

  To get help from a judge, you also need to file a copy with ${ trial_court }
  and deliver a copy to your landlord. Read the attached documents for more
  instructions.

  Learn more at [uptocode.org](https://uptocode.org)
---
id: details for this claim
question: |
  More information about **"${ str(bad_conditions[i].df.loc[j]['Interview description']).strip()[:1].lower() }${ str(bad_conditions[i].df.loc[j]['Interview description']).strip()[1:] }"**
fields:
  - label: |
      % if person_answering == "tenant":
      Was the problem there when you moved in? 
      % else: 
      Was the problem there when the tenant moved in?
      % endif
    field: bad_conditions[i].details[j].condition_existed_at_start
    datatype: yesnoradio
  - note: |
      **When did the problem start?**
      % if person_answering == "tenant":
        Enter as much of the date as you know.
      % else:
        Enter as much of the date as the tenant knows.
      % endif
    show if: 
      variable: bad_conditions[i].details[j].condition_existed_at_start
      is: False
  - Year: bad_conditions[i].details[j].start_year
    datatype: integer
    code: |
      list(range(today().year, today().year - 20 - 1, -1))
    show if: 
      variable: bad_conditions[i].details[j].condition_existed_at_start
      is: False
  - Month: bad_conditions[i].details[j].start_month
    datatype: integer
    required: False
    choices:
      - January: 1
      - February: 2
      - March: 3
      - April: 4
      - May: 5
      - June: 6
      - July: 7
      - August: 8
      - September: 9
      - October: 10
      - November: 11
      - December: 12
    show if: 
      variable: bad_conditions[i].details[j].condition_existed_at_start
      is: False
  - Day: bad_conditions[i].details[j].start_day
    datatype: integer
    code: |
      range(1,31+1)
    required: False
    show if: 
      variable: bad_conditions[i].details[j].condition_existed_at_start
      is: False
  - Is the problem fixed?: bad_conditions[i].details[j].condition_ended
    datatype: yesnoradio
    required: False
  - note: |
      Problems fixed before ${ today().minus(years=6) } should not be listed.
    show if: bad_conditions[i].details[j].condition_ended
  - Date problem ended (optional): bad_conditions[i].details[j].end_date
    alMax: ${ today() }
    alMin: ${ today().minus(years=6) }
    datatype: ThreePartsDate
    show if: bad_conditions[i].details[j].condition_ended
    required: False
    help: |
      % if person_answering == "tenant":
      You can list any problems in this apartment that:
      
      1. still need to be fixed and 
      2. you have had over the last 6 years (since ${ today().minus(years=6) }), even if they are fixed now.
      % else:
      List any problems in this apartment that:
      
      1. still need to be fixed and 
      2. the tenant had over the last 6 years (since ${ today().minus(years=6) }), even if they are fixed now.
      % endif
  - label: |
      % if person_answering == "tenant":
      If you would like, you can describe the problem using your own words (write about 1 sentence) 
      % else: 
      If you would like, you can describe the problem (write about 1 sentence)
      % endif
    field: bad_conditions[i].details[j].description
    datatype: area
    rows: 2
    required: False
  - Take or upload a photo: bad_conditions[i].details[j].has_file_to_upload
    datatype: yesno
  - Add a photo or other proof of the problem, if you have it: bad_conditions[i].details[j].files
    datatype: files
    required: False
    image upload type: jpeg
    accept: |
      "image/*,image/png,image/jpeg,.doc,.docx,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document,application/pdf,.pdf"       
    show if: bad_conditions[i].details[j].has_file_to_upload
validation code: |
  # Transform the approximate date into a real DADateTime object
  if not bad_conditions[i].details[j].condition_existed_at_start:
    bad_conditions[i].details[j].start_date = today().replace(day=1, month=1) # otherwise if the current day is past 28 might get a value error
    try:
      if bad_conditions[i].details[j].start_year:
        bad_conditions[i].details[j].start_date = bad_conditions[i].details[j].start_date.replace(year=int(bad_conditions[i].details[j].start_year))
      if int(bad_conditions[i].details[j].start_month) in range(1,12):
        bad_conditions[i].details[j].start_date = bad_conditions[i].details[j].start_date.replace(month=int(bad_conditions[i].details[j].start_month))
        bad_conditions[i].details[j].approximate_month = False
      else:
        bad_conditions[i].details[j].start_date = bad_conditions[i].details[j].start_date.replace(month=1)
        bad_conditions[i].details[j].approximate_month = True
      if int(bad_conditions[i].details[j].start_day) in range(1,31):
        bad_conditions[i].details[j].start_date = bad_conditions[i].details[j].start_date.replace(day=int(bad_conditions[i].details[j].start_day))
        bad_conditions[i].details[j].approximate_day = False
      else:
        bad_conditions[i].details[j].start_date = bad_conditions[i].details[j].start_date.replace(day=1)
        bad_conditions[i].details[j].approximate_day = True
    except ValueError:
      validation_error(f"The date {bad_conditions[i].details[j].start_month or 1}/{bad_conditions[i].details[j].start_day or 1}/{bad_conditions[i].details[j].start_year} is not a valid date. Check the day of the month or leave it blank.", field="bad_conditions[i].details[j].start_day")
---
id: landlord address
question: |
  What is ${ other_parties[0].name }'s address?
fields:
  - label: |
      % if person_answering == "tenant":
      I do not know my landlord's address
      % else:
      The tenant does not know their landlord's address
      % endif
    field: ll_address_unknown
    datatype: yesno
  - note: |
      % if person_answering == "tenant":
      **Okay**. You need your landlord's address for many of the forms on
      UpToCode. You can finish this form but you will need to add
      your landlord's address before you deliver the form.
      % else:
      **Okay**. The tenant needs their landlord's address for many of the forms on
      UpToCode. You can finish this form but the tenant will need to add
      their landlord's address before the tenant delivers the form.
      % endif
    show if: ll_address_unknown       
  - Street address: other_parties[0].address.address
    address autocomplete: True
    hide if: ll_address_unknown
  - Unit: other_parties[0].address.unit
    required: False
    hide if: ll_address_unknown    
  - City: other_parties[0].address.city
    hide if: ll_address_unknown  
  - State: other_parties[0].address.state
    hide if: ll_address_unknown  
    code: |
      states_list()
    default: MA      
  - Zip: other_parties[0].address.zip
    required: False
    hide if: ll_address_unknown
validation code: |
  if ll_address_unknown:
    other_parties[0].address.address = "[ Landlord's address ]"
    other_parties[0].address.city = "[ Landlord's city ]"
---
id: explain_documents
continue button field: explain_documents
question: |
  We have a few more questions
subquestion: |
  % if person_answering == "tenant":
  We need to ask you some more questions before we can finish creating the documents that you asked for.
  
  Once the documents are finished you will need to **print** them. You will need to follow the instructions provided to you at the end which describe what to do with the documents you have asked for.
  
  A copy of all of the documents should be kept for your own records. Some of the documents may need to be sent to your landlord. Some of the documents may need to be sent to your city inspector. And you may need to send some of the documents to the court.
  
  At the end, you will have a chance to download and email the documents for
  yourself or to send them to someone else. You should download and email a copy of each document to yourself or a trusted friend or family member so that you always have a copy and can **print** them if you need to in the future.
  
  % else:
  We need to ask you some more questions before we can finish creating the documents that the tenant has asked for.
  
  Once the documents are finished the tenant will need to **print** them. The tenant will need to follow the instructions provided at the end which describe what to do with the documents they have asked for.
  
  A copy of all of the documents should be kept for the tenant's own records. Some of the documents may need to be sent to the tenant's landlord. Some of the documents may need to be sent to the tenant's city inspector. And the tenant may need to send some of the documents to the court.
  
  At the end, the tenant will have a chance to download and email the documents for
  themself or to send them to someone else. The tenant should download and email a copy of each document to themself or a trusted friend or family member so that they always have a copy and can **print** them if they need to in the future.
  % endif
---
continue button field: explain_sharing
question: |
  Thank you for sharing your information
subquestion: |
  Your name and apartment number will stay private.
---
event: review_checklist
question: |
  Edit answers on your housing code checklist
review:
  - Edit: users[0].name.first
    button: |
      Your name: ${ users[0] }
  - Edit: review_conditions
    button: |
      ${ review_conditions_template }
  - Edit: users[0].address.address
    button: |
      Your address: ${ users[0].address_block() }      
  - Edit: other_parties[0].name.first
    button: |
      Your landlord's name: ${ other_parties[0] }
  - Edit: other_parties[0].address.address
    button: |
      Your landlord's address: ${ other_parties[0].address.address }
---
id: review screen
continue button field: uptocode_review
question: |
  % if person_answering == "tenant":
  Review your answers
  % else: 
  Review the answers
  % endif
subquestion: |
  <div class="alert alert-secondary h-100 mh-100" role="alert">
    <p class="h6 alert-heading"><i class="fa-solid fa-signs-post"></i>
    % if person_answering == "tenant":
    If you need to change any information you entered you can edit your answers by clicking the <strong>Edit</strong> buttons below.
    % else:
    If you need to change any information entered you can edit the answers by clicking the <strong>Edit</strong> buttons below.
    % endif
    </p>
review:
  - note: | 
      % if person_answering == "tenant":
      ##Information about you##
      % else:
      ##Information about the tenant##
      % endif
  - Edit:
      - users.revisit
    button: |
      Plaintiffs:
      
      % if users.there_are_any:
        - **${users[0].name}**
        - **Address:** ${ users[0].address }
      % if users[0].mobile_number:
        - **Mobile number:**  ${users[0].mobile_number}
      % endif
      % if users[0].phone_number:
        - **Phone number:**  ${users[0].phone_number}
      % endif
      % if users[0].email:
        - **Email:**  ${users[0].email}
      % endif
      % if users[0].mailing_address:
        - **Mailing address:** ${users[0].mailing_address}
      % endif
      % else:
      **None**
      % endif
  - note: |
      % if person_answering == "attorney":
      ##Information about the attorney##
      % endif
  - Edit: 
      - users[0].attorney.name.first
    button: |
      Attorney: 
      
      % if person_answering == "attorney":
        - **${ users[0].attorney.name }**
        - **Law firm or organization name**: ${ users[0].attorney.organization }
        - **Address:** ${ users[0].attorney.address } **since** ${users[0].move_in_date}
      % endif
  - note: | 
      % if other_parties.there_are_any:
      ##Information about the other party##
      % endif
  - Edit:
      - other_parties[0].name.first
    button: |
      Defendants: 
      
      % if other_parties.there_are_any:
        - **${ other_parties[0].name }**
        - **Person or Business:** ${other_parties[0].person_type}
        % if other_parties[0].phone_number:
        - **Phone number:** ${other_parties[0].phone_number}
        % endif
        % if other_parties[0].email:
        - **Email:** ${other_parties[0].email}
        % endif
        - **Address:** ${other_parties[0].address}
      % else:
      **None**
      % endif
      

  - note: |
      % if tenant_repair_issue_date:
      ##Problems##
      % endif
  - Edit: 
      - tenant_repair_issue_date
    button: |
      % if person_answering == "tenant":
      When did you first notice the problems: **${tenant_repair_issue_date}**
      % else:
      When did the tenant first notice the problems: **${tenant_repair_issue_date}**
      % endif
      
  - Edit: 
      - notification_date
    button: |
      % if person_answering == "tenant":
      When did you first notify the landlord about the problems: **${notification_date}**
      % else:
      When did the tenant first notify the landlord about the problems: **${notification_date}**
      % endif
  - Edit: 
      - written_notification
    button: |
      % if person_answering == "tenant":
      Did you notify your landlord about the problem in writing?: **${yesno(written_notification)}**
      % else:
      Did the tenant notify the landlord about the problem in writing?: **${yesno(written_notification)}**
      % endif
  - Edit:
      - letter_date
    button: |  
      % if written_notification:
      When?: **${letter_date}**
      % endif
  - Edit: 
      - effect_of_conditions
    button: |
      % if person_answering == "tenant":
      How have the conditions affected you and your property: **${effect_of_conditions}**
      % else:
      How have the conditions affected the tenant and their property: **${effect_of_conditions}**
      % endif
  - Edit: 
      - verified_complaint_claims[i].details
    button: |
      % if person_answering == "tenant":
      My landlord also violated the law when they: **${verified_complaint_claims[i].details}**
      When did this happen?: **${verified_complaint_claims[i].date}**
      % else:
      The tenant's landlord also violated the law when they: **${verified_complaint_claims[i].details}**
      When did this happen?: **${verified_complaint_claims[i].date}**
      % endif
  - note: |
      % if person_answering == "tenant":
      ## Your next steps ##
      % else:
      ## Tenant's next steps ##
      % endif
  - Edit: 
      - main_triage_screen
    button: |
      % if person_answering == "tenant":
      You have an active eviction case in court: **${ "Yes" if screen_tenant_facing_eviction == "pending" or screen_tenant_facing_eviction == "has case" else "No" }**
      % else:
      The tenant has an active eviction case in court: **${ "Yes" if screen_tenant_facing_eviction == "pending" or screen_tenant_facing_eviction == "has case" else "No" }**
      % endif
  - Edit: 
      - main_triage_screen
    button: |      
      % if person_answering == "tenant":
      Your landlord already knows about at least one of the problems in your home: **${ yesno(screen_ll_knows_problem) }**
      % else:
      The tenant's landlord already knows about at least one of the problems in their home: **${ yesno(screen_ll_knows_problem) }**
      % endif
  - Edit: 
      - main_triage_screen
    button: |    
      % if person_answering == "tenant":
      Your landlord is already fixing all of the problems: **${ yesno(screen_ll_already_fixing) }**
      % else:
      The tenant's landlord is already fixing all of the problems: **${ yesno(screen_ll_already_fixing) }**
      % endif
  - Edit: 
      - main_triage_screen
    button: |       
      % if person_answering == "tenant":
      Other tenants in your building are also having housing problems: **${ yesno(showifdef('screen_other_tenants_with_problem')) }**
      % else:
      Other tenants in the tenant's building are also having housing problems: **${ yesno(showifdef('screen_other_tenants_with_problem')) }**
      % endif
  - Edit: 
      - main_triage_screen
    button: |      
      % if person_answering == "tenant":
      You have reported all of the problems to a city housing inspector: **${ yesno(screen_contacted_housing_inspector) }**
      % else:
      The tenant has reported all of the problems to a city housing inspector: **${ yesno(screen_contacted_housing_inspector) }**
      % endif    
  - note: |
      ##Determining Compensation##
  
    show if: damage_calculation_method == "uptocode_calculation"
  - Edit:
      - damage_tenant_severity_estimate
    button: |
      How serious were the problems: **${damage_tenant_severity_estimate_text[damage_tenant_severity_estimate]}**
  - Edit: 
      - tenant_time_estimate
    button: |
      % if person_answering == "tenant":
      How long did you have the problems: **${tenant_time_estimate}**
      % else:
      How long did the tenant have the problems: **${tenant_time_estimate}**
      % endif
  - Edit:
      - tenant_percentage_estimate
    button: |
      % if person_answering == "tenant":
      What percentage do you think is fair to get off?: **${tenant_percentage_estimate}**
      % else:
      What percentage does the tenant think is fair to get off?: **${tenant_percentage_estimate}**
      % endif
      
  - note: |
      % if tenant_repair_introduction:
        % if person_answering == "tenant":
        ##Your letter##
        % else:
        ##The tenant's letter##
        % endif
      % endif
  - Edit:
      - tenant_repair_introduction
    button: |      
      **Introduction:** ${tenant_repair_introduction}
  - Edit:
      - tenant_repair_issue_description
    button: |
      **Description:** ${tenant_repair_issue_description}
  
    
  - note: | 
      % if person_answering == "tenant":
      ##Your lawsuit##
      % else:
      ##The tenant's lawsuit##
      % endif
  - Edit: 
      - kind_of_lawsuit
    button: |
      % if kind_of_lawsuit.any_true():
      % if person_answering == "tenant":
      Reasons you need to take your landlord to court:
      % else:
      Reasons the tenant needs to take their landlord to court:
      % endif
      % for item in kind_of_lawsuit.true_values():
      
       - ${ kind_of_lawsuit_text[item] }
      
      % endfor
      % endif
  - Edit: review_conditions
    button: |
      ${ review_conditions_template }
  - note: |
      ##Subsidies##
  - Edit: 
      - tenant_gets_rent_subsidy
    button: |
      % if person_answering == "tenant":
      Do you get a rent subsidy: **${yesno(tenant_gets_rent_subsidy)}**
      % else:
      Does the tenant get a rent subsidy: **${yesno(tenant_gets_rent_subsidy)}**
      % endif
  - Edit: 
      - tenant_subsidy_is_voucher
    button: |      
      % if person_answering == "tenant":
      Do you have a mobile voucher (Section 8 or MRVP)?: **${yesno(tenant_subsidy_is_voucher)}** 
      % else:
      Does the tenant have a mobile voucher (Section 8 or MRVP)?: **${yesno(tenant_subsidy_is_voucher)}**
      % endif     
  - Edit: 
      - verified_complaint_tenant_voucher_at_risk
    button: | 
        % if person_answering == "tenant":
        Is the tenant at risk of being forced to move by their housing authority?:  **${yesno(verified_complaint_tenant_voucher_at_risk)}**
        % else:
        Are you at risk of being forced to move by your housing authority?:  **${yesno(verified_complaint_tenant_voucher_at_risk)}**
        % endif
        
  - Edit: 
      - complaint_ask_for_tro
    button: | 
      % if person_answering == "tenant":
      Do you need an emergency order?: **${yesno(complaint_ask_for_tro)}**
      % else:
      Does the tenant need an emergency order?: **${yesno(complaint_ask_for_tro)}**
      % endif
  - Edit: 
      - complaint_ask_for_relocation
    button: |  
      % if person_answering == "tenant":
      Do you want the landlord to pay for a hotel or new apartment while they fix the problems?: **${yesno(complaint_ask_for_relocation)}**
      % else:
      Does the tenant want the landlord to pay for a hotel or new apartment while they fix the problems?: **${yesno(complaint_ask_for_relocation)}** 
      % endif

  - note: |
      ##Settlement calculation##
  - Edit: 
      - tenant_rent_share
    button: |
      % if person_answering == "tenant":
      What is your share of the rent? **$${tenant_rent_share}**
      % else:
      What is the tenant’s share of the rent? **$${tenant_rent_share}**
      % endif
  - Edit: 
      - tenant_unit_rent
    button: |
      What is the total rent the landlord gets: **$${tenant_unit_rent}**
  - Edit: 
      - tenant_confirmed_uptocode_damages_estimate
    button: |     
      Settlement Request: **$${tenant_confirmed_uptocode_damages_estimate}**
  - Edit: 
      - landlord_is_housing_authority
    button: |           
      Is the landlord a housing authority: **${yesno(landlord_is_housing_authority)}**  
  - Edit:
      - landlord_is_government
    button: |
      % if person_answering == "tenant":
      Is the city or the state your landlord?: **${yesno(landlord_is_government)}**
      % else:
      Is the city or the state the tenant’s landlord?: **${yesno(landlord_is_government)}**
      % endif
  - Edit: 
      - landlord_lives_in_building
    button: |
      % if person_answering == "tenant":
      Does your landlord live in an apartment or room in your building?: **${yesno(landlord_lives_in_building)}**
      % else:
      Does the tenant's landlord live in an apartment or room in the tenant's building?: **${yesno(landlord_lives_in_building)}**
      % endif
  - Edit:
      - building_larger_than_4_units
    button: |
      % if person_answering == "tenant":
      Does the building your landlord owns have at least 5 apartments?: **${yesno(building_larger_than_4_units)}**
      % else:
      Does the building the tenant's landlord own have at least 5 apartments?: **${yesno(building_larger_than_4_units)}**
      % endif
  - Edit:
      - trial_court
    button: |
      % if person_answering == "tenant":
      What court do you want to file in?: **${trial_court}**
      % else:
      What court does the tenant want to file in?: **${trial_court}**
      % endif
  
      
---
event: |
  users[0].attorney.revisit
id: |
  revisit users[0].attorney
question: |
  Edit your answers about users[0].Attorney
subquestion: |
  ${ users[0].attorney.table }
---
columns:
  - Describe the problem using your own words (write about 1 sentence; optional): |-
      row_item.description if hasattr(row_item, 'description') else ''
  - Was the problem there when you moved in?: |-
      row_item.condition_existed_at_start if hasattr(row_item, 'condition_existed_at_start') else ''
  - Month: |
      row_item.start_month if hasattr(row_item, 'start_month') else ''
  - The problem is fixed: |
      row_item.condition_ended if hasattr(row_item, 'condition_ended') else ''
  - Date problem ended (optional): |
      row_item.end_date if hasattr(row_item, 'end_date') else ''
  - Take or upload a photo: |
      row_item.has_file_to_upload if hasattr(row_item, 'has_file_to_upload') else ''
  - Add a photo or other proof of the problem, if you have it: |
      row_item.files if hasattr(row_item, 'files') else ''
rows: |
  bad_conditions
table: |
  bad_conditions.table
---
code: |
  package_name = "docassemble-HousingCodeChecklist"
  github_user = "nonprofittechy"
  feedback_form = user_info().package + ":feedback.yml"
---
code: |
  organize_tenants_attachment.enabled = screen_ll_knows_problem and document_choice['organize_tenants'] 
---
code: |
  conditions_report_attachment.enabled = action_argument('enabled') or (screen_ll_knows_problem and document_choice['get_report'] and include_conditions_in_complaint)
---
code: |
  request_housing_inspection_attachment.enabled = screen_ll_knows_problem and document_choice['get_inspection']
---
code: |
  tenant_repair_request_attachment.enabled = not screen_ll_knows_problem or document_choice['tell_landlord']
---
code: |
  letter_to_notify_landlord_instructions_attachment.enabled = not screen_ll_knows_problem or document_choice['tell_landlord']
---
code: |  
  Repair_Demand_Letter_attachment.enabled = screen_ll_knows_problem and document_choice['demand_letter_93a']
---
code: |
  verified_complaint_attachment.enabled = document_choice["sue_landlord"]
---
code: |
  verified_complaint_and_motions_post_interview_instructions.enabled = document_choice['sue_landlord']
---
code: |
  verified_complaint_attachment.enabled = screen_ll_knows_problem and document_choice['sue_landlord']
---
code: |  
  temporary_order.enabled = verified_complaint_attachment.enabled
---
code: |
  if verified_complaint_attachment.enabled:
    if trial_court.department != "Housing Court":
      order_of_notice.enabled = True
    else:
      order_of_notice.enabled = False
  else:
    order_of_notice.enabled = False
---
code: |
  contempt_complaint.enabled = screen_ll_knows_problem and document_choice['contempt_complaint']
---
objects:
  - organize_tenants_attachment: ALStaticDocument.using(title="Organize tenants", filename="lt1-pullout-10-getting-organized.pdf")
  - sue_your_landlord_attachment: ALStaticDocument.using(filename="lt1-pullout-13-taking-landlord-to-court.pdf", title="Sue your landlord")
  - organize_tenants_attachment: ALDocument.using(title="Organize!", filename="lt1-pullout-10-getting-organized")
  - sue_your_landlord_attachment: ALDocument.using(title="Sue your Landlord", filename="sue_your_landlord")
  - request_housing_inspection_attachment: ALDocument.using(title="Letter to Request Housing Inspection", filename="inspection_request")
  - letter_to_notify_landlord_instructions_attachment: ALDocument.using(title="Instructions - Letter to tell landlord about housing problems", filename="instructions_notice_letter")
  - conditions_report_attachment: ALDocument.using(title="Housing Conditions Report", filename="housing_conditions_report")
  - request_housing_inspection_instructions_attachment: ALDocument.using(title="Instructions - Letter to Request Housing Inspection", filename="inspection_request_instructions")
---
attachment:
  variable name: conditions_report_attachment[i]
  docx template file: Evidence_packet.docx
  language: en
---
attachment:
  variable name: request_housing_inspection_attachment[i]
  docx template file: letter_to_request_inspection.docx
  language: en
---
attachment:
  variable name: request_housing_inspection_instructions_attachment[i]
  docx template file: next_steps_inspection_request_letter.docx
---
attachment:
  variable name: letter_to_notify_landlord_instructions_attachment[i]
  docx template file: next_steps_request_for_repairs_letter.docx
---
code: |
  request_housing_inspection_instructions_attachment.enabled = request_housing_inspection_attachment.enabled
---
objects:
  - housing_code_bundle: ALDocumentBundle.using(elements=[
        conditions_report_attachment,
        organize_tenants_attachment,
        letter_to_notify_landlord_instructions_attachment,
        tenant_repair_request_attachment,
        request_housing_inspection_instructions_attachment,
        request_housing_inspection_attachment,
        Repair_Demand_Letter_attachment,
      ],
      title="Your housing conditions toolkit", filename="housing_conditions_documents",
      )
  - tenant_repair_letter_bundle: ALDocumentBundle.using(elements=[
        letter_to_notify_landlord_instructions_attachment,
        tenant_repair_request_attachment
      ],
      title="Your repair request letter",
      filename="repair_request_letter",
      )
  - affirmative_complaint_bundle: ALDocumentBundle.using(elements=[
        verified_complaint_and_motions_post_interview_instructions,
        verified_complaint_attachment,
        motion_for_injunctive_relief_attachment,
        order_of_notice,
        temporary_order,
        contempt_complaint,
        discovery_attachment,
        affidavitofindigency_attachment,
      ], title="Documents to file in court and serve your landlord",
      filename="affirmative_complaint_documents",
      )
  - everything_for_emailing_bundle: ALDocumentBundle.using(elements=[
        verified_complaint_and_motions_post_interview_instructions,
        verified_complaint_attachment,
        motion_for_injunctive_relief_attachment,
        temporary_order,
        order_of_notice,
        contempt_complaint,
        conditions_report_attachment,
        organize_tenants_attachment,
        letter_to_notify_landlord_instructions_attachment,
        tenant_repair_request_attachment,
        request_housing_inspection_instructions_attachment,
        request_housing_inspection_attachment,
        Repair_Demand_Letter_attachment,
        discovery_attachment,
        affidavitofindigency_attachment,
      ], title="All documents for your records", filename="tenant_copy")
  - further_documents_bundle: ALDocumentBundle.using(elements=[
        temporary_order,
        order_of_notice,
        contempt_complaint,
        discovery_attachment
      ], title="Documents for future case use",
      filename="further_documents",
      )
---
objects:
  - lsc_logo: DAStaticFile.using(filename="lsc_logo_horizontal.jpg")
  - mlac_logo: DAStaticFile.using(filename="mlac_logo.png")
---
event: about_this_interview
id: about uptocode
question: |
  About UpToCode
subquestion: |
  ${ about_this_interview_version_info }
back button label: |
  Back to questions
---
template: about_this_interview_version_info
content: |
  UpToCode is a free website that gives tenants the power to solve
  landlord problems. It is funded by the national Legal Services Corporation and
  Massachusetts nonprofits.
  
  UpToCode does not share any personal identifying information with the government or any other entity. 

  UpToCode includes a translated and easy-to-read English version of the Massachusetts
  Sanitary Code, the law that lists the requirements Massachusetts landlords
  must follow. UpToCode helps tenants:
  
  1. Discover their rights under the law.
  1. Report problems to their landlord, a city housing inspector, or the court,
  1. Ask a court for an order to enforce repairs or get compensation for illegal landlord
  actions.

  UpToCode was originally authored by Quinten Steenhuis in 2021 in
  partnership with [Massachusetts Law Reform Institute](https://mlri.org) as
  part of the COVID Eviction Legal Help Project legal services component.

  In 2022, the [Legal Services Corporation](https://lsc.gov) and [Northeast
  Legal Aid](https://northeastlegalaid.org) funded a major revision with new
  features, including the ability to file a complaint in court.

  UpToCode is generously hosted by [Greater Boston Legal Services](https://gbls.org).
  
  Community organizations [La Colaborativa](https://la-colaborativa.org) and
  [Lynn United for Change](https://lynnunited.org) played a special role in
  co-design of UpToCode.

  &copy; 2022 Northeast Legal Aid, Quinten Steenhuis and open source
  contributors under an [MIT license](https://opensource.org/licenses/MIT).  

  % if all_variables(special='metadata').get('authors'):
  Additional authors of work incorporated within UpToCode include: ${
  comma_and_list(all_variables(special='metadata').get('authors')) }.
  % endif
  
  "${all_variables(special='metadata').get('title','').rstrip()}" includes code
  from the [Document Assembly Line
  project](https://suffolklitlab.org/docassemble-AssemblyLine-documentation/docs/).

  "${all_variables(special='metadata').get('title','').rstrip()}" version 
  `${ package_version_number }`; AssemblyLine version `${ al_version }`.
  
  % if package_updated_on:
  Last updated on ${ package_updated_on }. [:fab-fa-github: View code on
  GitHub](${ github_url }).
  % endif

  <a href="https://www.lsc.gov/"><img src="${ lsc_logo.url_for() }" style="max-width: 80%" alt="Legal Services Corporation logo"/></a>

  <a href="https://www.mlac.org/"><img src="${ mlac_logo.url_for() }" alt="Massachusetts Legal Assistance Corporation logo"/></a>
---
id: condemn_warning
continue button field: condemn_warning
question: |
  You may want to wait to submit a request to inspectional services
subquestion: |
  % if person_answering == "tenant":
  A unit can be {condemned} in certain circumstances.
  
  **Before submitting your request to inspectional services, please seek legal help if you believe that:**
  
  1. You live in an {illegal unit}.
  1. Your unit is {overcrowded}.
  1. Your unit is {uninhabitable}.
  
  Find legal aid organizations in your area by answering a few questions [here](https://masslrf.org/en/triage/start/housing).
  % else:
  A unit can be {condemned} in certain circumstances.
  
  **Before submitting a request to inspectional services, please seek legal help if the tenant thinks that:**
  
  1. They live in an {illegal unit}.
  1. Their unit is {overcrowded}.
  1. Their unit is {uninhabitable}.
  
  Find legal aid organizations in the tenant's area by answering a few questions [here](https://masslrf.org/en/triage/start/housing).
  % endif